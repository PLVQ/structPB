// protoc generate parameter
// clang-format off
// 
// =========================
#pragma once

// Generated by the protocol buffer compiler (struct_pb).  DO NOT EDIT!
// source: BoxConfig.proto

#include <limits>
#include <map>
#include <memory>
#include <optional>
#include <string>
#include <type_traits>
#include <variant>
#include <vector>

#include "ylt/struct_pb.hpp"

namespace resource {
struct BuyBoxConfig;
struct BuyBoxConfigList;
struct BuyBoxChanceConfig;
struct BuyBoxChanceConfigList;
struct BuyBoxWishConfig;
struct BuyBoxWishConfigList;
struct UpBoxConfig;
struct UpBoxConfigList;
struct BuyBoxConfig {
  int32_t BoxType; // int32, field number = 1
  int32_t BoxID; // int32, field number = 2
  int32_t ActivitySubID; // int32, field number = 3
  int32_t SortID; // int32, field number = 4
  int32_t UnlockLv; // int32, field number = 5
  std::string BoxName; // string, field number = 6
  std::string BoxNameColorTop; // string, field number = 7
  std::string BoxNameColorDown; // string, field number = 8
  std::string BoxNameOutlineColor; // string, field number = 9
  std::string BoxDesc; // string, field number = 10
  std::string BoxDescColor; // string, field number = 11
  std::string BoxDescOutlineColor; // string, field number = 12
  std::string BoxIcon; // string, field number = 13
  int32_t BoxPortrait; // int32, field number = 14
  std::string BoxBg; // string, field number = 15
  std::string EntranceIcon; // string, field number = 16
  int32_t DrawCardPanelType; // int32, field number = 17
  int32_t CostItemID; // int32, field number = 18
  int32_t CostItemCnt; // int32, field number = 19
  int32_t CostMoneyType; // int32, field number = 20
  int32_t CostMoneyCnt; // int32, field number = 21
  int32_t FreeRefreshint32erval; // int32, field number = 22
  int32_t FirstBooty; // int32, field number = 23
  int32_t CostBootyID; // int32, field number = 24
  int32_t TenCostItemID; // int32, field number = 25
  int32_t TenCostItemCnt; // int32, field number = 26
  int32_t TenCostMoneyType; // int32, field number = 27
  int32_t TenCostMoneyCnt; // int32, field number = 28
  int32_t TenCostBootyID; // int32, field number = 29
  float TenDiscount; // float, field number = 30
  int32_t Replenish; // int32, field number = 31
  int32_t EnsureShowBootyID; // int32, field number = 32
  int32_t UnLockWishHeroCnt; // int32, field number = 33
  int32_t UnLockWishBlessHeroCnt; // int32, field number = 34
  int32_t BlessingCnt; // int32, field number = 35
  int32_t RuleTextID; // int32, field number = 36
  int32_t CardPoolID; // int32, field number = 37
  int32_t WishPoolID; // int32, field number = 38
  int32_t UPPoolID; // int32, field number = 39
};
struct BuyBoxConfigList {
  std::vector<::resource::BuyBoxConfig> data; // message, field number = 1
};
struct BuyBoxChanceConfig {
  int32_t CardPoolID; // int32, field number = 1
  int32_t HeroStar; // int32, field number = 2
  int32_t HeroID; // int32, field number = 3
  float Chance; // float, field number = 4
};
struct BuyBoxChanceConfigList {
  std::vector<::resource::BuyBoxChanceConfig> data; // message, field number = 1
};
struct BuyBoxWishConfig {
  int32_t WishPoolID; // int32, field number = 1
  int32_t HeroID; // int32, field number = 2
  int32_t CoreFlag; // int32, field number = 3
};
struct BuyBoxWishConfigList {
  std::vector<::resource::BuyBoxWishConfig> data; // message, field number = 1
};
struct UpBoxConfig {
  int32_t UPPoolID; // int32, field number = 1
  int32_t HeroID; // int32, field number = 2
  std::string HeroBg; // string, field number = 3
  int32_t HeroModel; // int32, field number = 4
  std::string HeroNameBg; // string, field number = 5
  std::string DescText; // string, field number = 6
  std::string DescTextColor; // string, field number = 7
  float DescPosX; // float, field number = 8
  float DescPosY; // float, field number = 9
  std::string HeroDescBg; // string, field number = 10
  std::string EnsureBg; // string, field number = 11
  std::string EnsureDescOutlineColor; // string, field number = 12
  std::string EnsureDescColorTop; // string, field number = 13
  std::string EnsureDescColorDown; // string, field number = 14
  std::string SingleDrawBtnImg; // string, field number = 15
  int32_t EnsureID; // int32, field number = 16
  int32_t CostBootyID; // int32, field number = 17
  int32_t MinEnsureID; // int32, field number = 18
};
struct UpBoxConfigList {
  std::vector<::resource::UpBoxConfig> data; // message, field number = 1
};

} // namespace resource
namespace struct_pb {
namespace internal {
// ::resource::BuyBoxConfig
template<>
std::size_t get_needed_size<::resource::BuyBoxConfig>(const ::resource::BuyBoxConfig& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
void serialize_to<::resource::BuyBoxConfig>(char* data, std::size_t size, const ::resource::BuyBoxConfig& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxConfig>(::resource::BuyBoxConfig& t, const char* data, std::size_t size, ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxConfig>(::resource::BuyBoxConfig& t, const char* data, std::size_t size);

// ::resource::BuyBoxConfigList
template<>
std::size_t get_needed_size<::resource::BuyBoxConfigList>(const ::resource::BuyBoxConfigList& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
void serialize_to<::resource::BuyBoxConfigList>(char* data, std::size_t size, const ::resource::BuyBoxConfigList& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxConfigList>(::resource::BuyBoxConfigList& t, const char* data, std::size_t size, ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxConfigList>(::resource::BuyBoxConfigList& t, const char* data, std::size_t size);

// ::resource::BuyBoxChanceConfig
template<>
std::size_t get_needed_size<::resource::BuyBoxChanceConfig>(const ::resource::BuyBoxChanceConfig& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
void serialize_to<::resource::BuyBoxChanceConfig>(char* data, std::size_t size, const ::resource::BuyBoxChanceConfig& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxChanceConfig>(::resource::BuyBoxChanceConfig& t, const char* data, std::size_t size, ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxChanceConfig>(::resource::BuyBoxChanceConfig& t, const char* data, std::size_t size);

// ::resource::BuyBoxChanceConfigList
template<>
std::size_t get_needed_size<::resource::BuyBoxChanceConfigList>(const ::resource::BuyBoxChanceConfigList& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
void serialize_to<::resource::BuyBoxChanceConfigList>(char* data, std::size_t size, const ::resource::BuyBoxChanceConfigList& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxChanceConfigList>(::resource::BuyBoxChanceConfigList& t, const char* data, std::size_t size, ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxChanceConfigList>(::resource::BuyBoxChanceConfigList& t, const char* data, std::size_t size);

// ::resource::BuyBoxWishConfig
template<>
std::size_t get_needed_size<::resource::BuyBoxWishConfig>(const ::resource::BuyBoxWishConfig& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
void serialize_to<::resource::BuyBoxWishConfig>(char* data, std::size_t size, const ::resource::BuyBoxWishConfig& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxWishConfig>(::resource::BuyBoxWishConfig& t, const char* data, std::size_t size, ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxWishConfig>(::resource::BuyBoxWishConfig& t, const char* data, std::size_t size);

// ::resource::BuyBoxWishConfigList
template<>
std::size_t get_needed_size<::resource::BuyBoxWishConfigList>(const ::resource::BuyBoxWishConfigList& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
void serialize_to<::resource::BuyBoxWishConfigList>(char* data, std::size_t size, const ::resource::BuyBoxWishConfigList& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxWishConfigList>(::resource::BuyBoxWishConfigList& t, const char* data, std::size_t size, ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::BuyBoxWishConfigList>(::resource::BuyBoxWishConfigList& t, const char* data, std::size_t size);

// ::resource::UpBoxConfig
template<>
std::size_t get_needed_size<::resource::UpBoxConfig>(const ::resource::UpBoxConfig& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
void serialize_to<::resource::UpBoxConfig>(char* data, std::size_t size, const ::resource::UpBoxConfig& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::UpBoxConfig>(::resource::UpBoxConfig& t, const char* data, std::size_t size, ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::UpBoxConfig>(::resource::UpBoxConfig& t, const char* data, std::size_t size);

// ::resource::UpBoxConfigList
template<>
std::size_t get_needed_size<::resource::UpBoxConfigList>(const ::resource::UpBoxConfigList& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
void serialize_to<::resource::UpBoxConfigList>(char* data, std::size_t size, const ::resource::UpBoxConfigList& t, const ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::UpBoxConfigList>(::resource::UpBoxConfigList& t, const char* data, std::size_t size, ::struct_pb::UnknownFields& unknown_fields);
template<>
bool deserialize_to<::resource::UpBoxConfigList>(::resource::UpBoxConfigList& t, const char* data, std::size_t size);

} // internal
} // struct_pb
// clang-format on
