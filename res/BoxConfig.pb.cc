// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BoxConfig.proto

#include "BoxConfig.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace resource {
constexpr BuyBoxConfig::BuyBoxConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : boxname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxnamecolortop_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxnamecolordown_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxnameoutlinecolor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxdesc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxdesccolor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxdescoutlinecolor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxicon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxbg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , entranceicon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxtype_(0)
  , boxid_(0)
  , activitysubid_(0)
  , sortid_(0)
  , unlocklv_(0)
  , boxportrait_(0)
  , drawcardpaneltype_(0)
  , costitemid_(0)
  , costitemcnt_(0)
  , costmoneytype_(0)
  , costmoneycnt_(0)
  , freerefreshint32erval_(0)
  , firstbooty_(0)
  , costbootyid_(0)
  , tencostitemid_(0)
  , tencostitemcnt_(0)
  , tencostmoneytype_(0)
  , tencostmoneycnt_(0)
  , tencostbootyid_(0)
  , tendiscount_(0)
  , replenish_(0)
  , ensureshowbootyid_(0)
  , unlockwishherocnt_(0)
  , unlockwishblessherocnt_(0)
  , blessingcnt_(0)
  , ruletextid_(0)
  , cardpoolid_(0)
  , wishpoolid_(0)
  , uppoolid_(0){}
struct BuyBoxConfigDefaultTypeInternal {
  constexpr BuyBoxConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BuyBoxConfigDefaultTypeInternal() {}
  union {
    BuyBoxConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BuyBoxConfigDefaultTypeInternal _BuyBoxConfig_default_instance_;
constexpr BuyBoxConfigList::BuyBoxConfigList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(){}
struct BuyBoxConfigListDefaultTypeInternal {
  constexpr BuyBoxConfigListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BuyBoxConfigListDefaultTypeInternal() {}
  union {
    BuyBoxConfigList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BuyBoxConfigListDefaultTypeInternal _BuyBoxConfigList_default_instance_;
constexpr BuyBoxChanceConfig::BuyBoxChanceConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cardpoolid_(0)
  , herostar_(0)
  , heroid_(0)
  , chance_(0){}
struct BuyBoxChanceConfigDefaultTypeInternal {
  constexpr BuyBoxChanceConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BuyBoxChanceConfigDefaultTypeInternal() {}
  union {
    BuyBoxChanceConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BuyBoxChanceConfigDefaultTypeInternal _BuyBoxChanceConfig_default_instance_;
constexpr BuyBoxChanceConfigList::BuyBoxChanceConfigList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(){}
struct BuyBoxChanceConfigListDefaultTypeInternal {
  constexpr BuyBoxChanceConfigListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BuyBoxChanceConfigListDefaultTypeInternal() {}
  union {
    BuyBoxChanceConfigList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BuyBoxChanceConfigListDefaultTypeInternal _BuyBoxChanceConfigList_default_instance_;
constexpr BuyBoxWishConfig::BuyBoxWishConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : wishpoolid_(0)
  , heroid_(0)
  , coreflag_(0){}
struct BuyBoxWishConfigDefaultTypeInternal {
  constexpr BuyBoxWishConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BuyBoxWishConfigDefaultTypeInternal() {}
  union {
    BuyBoxWishConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BuyBoxWishConfigDefaultTypeInternal _BuyBoxWishConfig_default_instance_;
constexpr BuyBoxWishConfigList::BuyBoxWishConfigList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(){}
struct BuyBoxWishConfigListDefaultTypeInternal {
  constexpr BuyBoxWishConfigListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BuyBoxWishConfigListDefaultTypeInternal() {}
  union {
    BuyBoxWishConfigList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BuyBoxWishConfigListDefaultTypeInternal _BuyBoxWishConfigList_default_instance_;
constexpr UpBoxConfig::UpBoxConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : herobg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , heronamebg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , desctext_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , desctextcolor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , herodescbg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ensurebg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ensuredescoutlinecolor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ensuredesccolortop_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ensuredesccolordown_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , singledrawbtnimg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uppoolid_(0)
  , heroid_(0)
  , heromodel_(0)
  , descposx_(0)
  , descposy_(0)
  , ensureid_(0)
  , costbootyid_(0)
  , minensureid_(0){}
struct UpBoxConfigDefaultTypeInternal {
  constexpr UpBoxConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpBoxConfigDefaultTypeInternal() {}
  union {
    UpBoxConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpBoxConfigDefaultTypeInternal _UpBoxConfig_default_instance_;
constexpr UpBoxConfigList::UpBoxConfigList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(){}
struct UpBoxConfigListDefaultTypeInternal {
  constexpr UpBoxConfigListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpBoxConfigListDefaultTypeInternal() {}
  union {
    UpBoxConfigList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpBoxConfigListDefaultTypeInternal _UpBoxConfigList_default_instance_;
}  // namespace resource
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_BoxConfig_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_BoxConfig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_BoxConfig_2eproto = nullptr;

const uint32_t TableStruct_BoxConfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxtype_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, activitysubid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, sortid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, unlocklv_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxname_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxnamecolortop_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxnamecolordown_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxnameoutlinecolor_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxdesc_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxdesccolor_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxdescoutlinecolor_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxicon_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxportrait_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, boxbg_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, entranceicon_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, drawcardpaneltype_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, costitemid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, costitemcnt_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, costmoneytype_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, costmoneycnt_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, freerefreshint32erval_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, firstbooty_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, costbootyid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, tencostitemid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, tencostitemcnt_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, tencostmoneytype_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, tencostmoneycnt_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, tencostbootyid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, tendiscount_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, replenish_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, ensureshowbootyid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, unlockwishherocnt_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, unlockwishblessherocnt_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, blessingcnt_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, ruletextid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, cardpoolid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, wishpoolid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfig, uppoolid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfigList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxConfigList, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxChanceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxChanceConfig, cardpoolid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxChanceConfig, herostar_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxChanceConfig, heroid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxChanceConfig, chance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxChanceConfigList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxChanceConfigList, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxWishConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxWishConfig, wishpoolid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxWishConfig, heroid_),
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxWishConfig, coreflag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxWishConfigList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::resource::BuyBoxWishConfigList, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, uppoolid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, heroid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, herobg_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, heromodel_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, heronamebg_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, desctext_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, desctextcolor_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, descposx_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, descposy_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, herodescbg_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, ensurebg_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, ensuredescoutlinecolor_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, ensuredesccolortop_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, ensuredesccolordown_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, singledrawbtnimg_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, ensureid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, costbootyid_),
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfig, minensureid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfigList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::resource::UpBoxConfigList, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::resource::BuyBoxConfig)},
  { 45, -1, -1, sizeof(::resource::BuyBoxConfigList)},
  { 52, -1, -1, sizeof(::resource::BuyBoxChanceConfig)},
  { 62, -1, -1, sizeof(::resource::BuyBoxChanceConfigList)},
  { 69, -1, -1, sizeof(::resource::BuyBoxWishConfig)},
  { 78, -1, -1, sizeof(::resource::BuyBoxWishConfigList)},
  { 85, -1, -1, sizeof(::resource::UpBoxConfig)},
  { 109, -1, -1, sizeof(::resource::UpBoxConfigList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_BuyBoxConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_BuyBoxConfigList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_BuyBoxChanceConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_BuyBoxChanceConfigList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_BuyBoxWishConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_BuyBoxWishConfigList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpBoxConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::resource::_UpBoxConfigList_default_instance_),
};

const char descriptor_table_protodef_BoxConfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017BoxConfig.proto\022\010resource\"\353\006\n\014BuyBoxCo"
  "nfig\022\017\n\007BoxType\030\001 \001(\005\022\r\n\005BoxID\030\002 \001(\005\022\025\n\r"
  "ActivitySubID\030\003 \001(\005\022\016\n\006SortID\030\004 \001(\005\022\020\n\010U"
  "nlockLv\030\005 \001(\005\022\017\n\007BoxName\030\006 \001(\t\022\027\n\017BoxNam"
  "eColorTop\030\007 \001(\t\022\030\n\020BoxNameColorDown\030\010 \001("
  "\t\022\033\n\023BoxNameOutlineColor\030\t \001(\t\022\017\n\007BoxDes"
  "c\030\n \001(\t\022\024\n\014BoxDescColor\030\013 \001(\t\022\033\n\023BoxDesc"
  "OutlineColor\030\014 \001(\t\022\017\n\007BoxIcon\030\r \001(\t\022\023\n\013B"
  "oxPortrait\030\016 \001(\005\022\r\n\005BoxBg\030\017 \001(\t\022\024\n\014Entra"
  "nceIcon\030\020 \001(\t\022\031\n\021DrawCardPanelType\030\021 \001(\005"
  "\022\022\n\nCostItemID\030\022 \001(\005\022\023\n\013CostItemCnt\030\023 \001("
  "\005\022\025\n\rCostMoneyType\030\024 \001(\005\022\024\n\014CostMoneyCnt"
  "\030\025 \001(\005\022\035\n\025FreeRefreshint32erval\030\026 \001(\005\022\022\n"
  "\nFirstBooty\030\027 \001(\005\022\023\n\013CostBootyID\030\030 \001(\005\022\025"
  "\n\rTenCostItemID\030\031 \001(\005\022\026\n\016TenCostItemCnt\030"
  "\032 \001(\005\022\030\n\020TenCostMoneyType\030\033 \001(\005\022\027\n\017TenCo"
  "stMoneyCnt\030\034 \001(\005\022\026\n\016TenCostBootyID\030\035 \001(\005"
  "\022\023\n\013TenDiscount\030\036 \001(\002\022\021\n\tReplenish\030\037 \001(\005"
  "\022\031\n\021EnsureShowBootyID\030  \001(\005\022\031\n\021UnLockWis"
  "hHeroCnt\030! \001(\005\022\036\n\026UnLockWishBlessHeroCnt"
  "\030\" \001(\005\022\023\n\013BlessingCnt\030# \001(\005\022\022\n\nRuleTextI"
  "D\030$ \001(\005\022\022\n\nCardPoolID\030% \001(\005\022\022\n\nWishPoolI"
  "D\030& \001(\005\022\020\n\010UPPoolID\030\' \001(\005\"8\n\020BuyBoxConfi"
  "gList\022$\n\004data\030\001 \003(\0132\026.resource.BuyBoxCon"
  "fig\"Z\n\022BuyBoxChanceConfig\022\022\n\nCardPoolID\030"
  "\001 \001(\005\022\020\n\010HeroStar\030\002 \001(\005\022\016\n\006HeroID\030\003 \001(\005\022"
  "\016\n\006Chance\030\004 \001(\002\"D\n\026BuyBoxChanceConfigLis"
  "t\022*\n\004data\030\001 \003(\0132\034.resource.BuyBoxChanceC"
  "onfig\"H\n\020BuyBoxWishConfig\022\022\n\nWishPoolID\030"
  "\001 \001(\005\022\016\n\006HeroID\030\002 \001(\005\022\020\n\010CoreFlag\030\003 \001(\005\""
  "@\n\024BuyBoxWishConfigList\022(\n\004data\030\001 \003(\0132\032."
  "resource.BuyBoxWishConfig\"\210\003\n\013UpBoxConfi"
  "g\022\020\n\010UPPoolID\030\001 \001(\005\022\016\n\006HeroID\030\002 \001(\005\022\016\n\006H"
  "eroBg\030\003 \001(\t\022\021\n\tHeroModel\030\004 \001(\005\022\022\n\nHeroNa"
  "meBg\030\005 \001(\t\022\020\n\010DescText\030\006 \001(\t\022\025\n\rDescText"
  "Color\030\007 \001(\t\022\020\n\010DescPosX\030\010 \001(\002\022\020\n\010DescPos"
  "Y\030\t \001(\002\022\022\n\nHeroDescBg\030\n \001(\t\022\020\n\010EnsureBg\030"
  "\013 \001(\t\022\036\n\026EnsureDescOutlineColor\030\014 \001(\t\022\032\n"
  "\022EnsureDescColorTop\030\r \001(\t\022\033\n\023EnsureDescC"
  "olorDown\030\016 \001(\t\022\030\n\020SingleDrawBtnImg\030\017 \001(\t"
  "\022\020\n\010EnsureID\030\020 \001(\005\022\023\n\013CostBootyID\030\021 \001(\005\022"
  "\023\n\013MinEnsureID\030\022 \001(\005\"6\n\017UpBoxConfigList\022"
  "#\n\004data\030\001 \003(\0132\025.resource.UpBoxConfigB\025Z\023"
  "./resource;resourceb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_BoxConfig_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_BoxConfig_2eproto = {
  false, false, 1747, descriptor_table_protodef_BoxConfig_2eproto, "BoxConfig.proto", 
  &descriptor_table_BoxConfig_2eproto_once, nullptr, 0, 8,
  schemas, file_default_instances, TableStruct_BoxConfig_2eproto::offsets,
  file_level_metadata_BoxConfig_2eproto, file_level_enum_descriptors_BoxConfig_2eproto, file_level_service_descriptors_BoxConfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_BoxConfig_2eproto_getter() {
  return &descriptor_table_BoxConfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_BoxConfig_2eproto(&descriptor_table_BoxConfig_2eproto);
namespace resource {

// ===================================================================

class BuyBoxConfig::_Internal {
 public:
};

BuyBoxConfig::BuyBoxConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:resource.BuyBoxConfig)
}
BuyBoxConfig::BuyBoxConfig(const BuyBoxConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  boxname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxname().empty()) {
    boxname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxname(), 
      GetArenaForAllocation());
  }
  boxnamecolortop_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxnamecolortop_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxnamecolortop().empty()) {
    boxnamecolortop_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxnamecolortop(), 
      GetArenaForAllocation());
  }
  boxnamecolordown_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxnamecolordown_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxnamecolordown().empty()) {
    boxnamecolordown_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxnamecolordown(), 
      GetArenaForAllocation());
  }
  boxnameoutlinecolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxnameoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxnameoutlinecolor().empty()) {
    boxnameoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxnameoutlinecolor(), 
      GetArenaForAllocation());
  }
  boxdesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxdesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxdesc().empty()) {
    boxdesc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxdesc(), 
      GetArenaForAllocation());
  }
  boxdesccolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxdesccolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxdesccolor().empty()) {
    boxdesccolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxdesccolor(), 
      GetArenaForAllocation());
  }
  boxdescoutlinecolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxdescoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxdescoutlinecolor().empty()) {
    boxdescoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxdescoutlinecolor(), 
      GetArenaForAllocation());
  }
  boxicon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxicon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxicon().empty()) {
    boxicon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxicon(), 
      GetArenaForAllocation());
  }
  boxbg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    boxbg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_boxbg().empty()) {
    boxbg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxbg(), 
      GetArenaForAllocation());
  }
  entranceicon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entranceicon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entranceicon().empty()) {
    entranceicon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_entranceicon(), 
      GetArenaForAllocation());
  }
  ::memcpy(&boxtype_, &from.boxtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&uppoolid_) -
    reinterpret_cast<char*>(&boxtype_)) + sizeof(uppoolid_));
  // @@protoc_insertion_point(copy_constructor:resource.BuyBoxConfig)
}

inline void BuyBoxConfig::SharedCtor() {
boxname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
boxnamecolortop_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxnamecolortop_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
boxnamecolordown_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxnamecolordown_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
boxnameoutlinecolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxnameoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
boxdesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxdesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
boxdesccolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxdesccolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
boxdescoutlinecolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxdescoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
boxicon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxicon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
boxbg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  boxbg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
entranceicon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entranceicon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&boxtype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uppoolid_) -
    reinterpret_cast<char*>(&boxtype_)) + sizeof(uppoolid_));
}

BuyBoxConfig::~BuyBoxConfig() {
  // @@protoc_insertion_point(destructor:resource.BuyBoxConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BuyBoxConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  boxname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxnamecolortop_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxnamecolordown_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxnameoutlinecolor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxdesc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxdesccolor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxdescoutlinecolor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxicon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxbg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  entranceicon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BuyBoxConfig::ArenaDtor(void* object) {
  BuyBoxConfig* _this = reinterpret_cast< BuyBoxConfig* >(object);
  (void)_this;
}
void BuyBoxConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuyBoxConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BuyBoxConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.BuyBoxConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boxname_.ClearToEmpty();
  boxnamecolortop_.ClearToEmpty();
  boxnamecolordown_.ClearToEmpty();
  boxnameoutlinecolor_.ClearToEmpty();
  boxdesc_.ClearToEmpty();
  boxdesccolor_.ClearToEmpty();
  boxdescoutlinecolor_.ClearToEmpty();
  boxicon_.ClearToEmpty();
  boxbg_.ClearToEmpty();
  entranceicon_.ClearToEmpty();
  ::memset(&boxtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uppoolid_) -
      reinterpret_cast<char*>(&boxtype_)) + sizeof(uppoolid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyBoxConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 BoxType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          boxtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 BoxID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          boxid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ActivitySubID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          activitysubid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 SortID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          sortid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 UnlockLv = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          unlocklv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_boxname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxNameColorTop = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_boxnamecolortop();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxNameColorTop"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxNameColorDown = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_boxnamecolordown();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxNameColorDown"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxNameOutlineColor = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_boxnameoutlinecolor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxNameOutlineColor"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxDesc = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_boxdesc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxDesc"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxDescColor = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_boxdesccolor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxDescColor"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxDescOutlineColor = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_boxdescoutlinecolor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxDescOutlineColor"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxIcon = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_boxicon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxIcon"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 BoxPortrait = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          boxportrait_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string BoxBg = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_boxbg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.BoxBg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string EntranceIcon = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          auto str = _internal_mutable_entranceicon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.BuyBoxConfig.EntranceIcon"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 DrawCardPanelType = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          drawcardpaneltype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CostItemID = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          costitemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CostItemCnt = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          costitemcnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CostMoneyType = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          costmoneytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CostMoneyCnt = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          costmoneycnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 FreeRefreshint32erval = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          freerefreshint32erval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 FirstBooty = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          firstbooty_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CostBootyID = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          costbootyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 TenCostItemID = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          tencostitemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 TenCostItemCnt = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          tencostitemcnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 TenCostMoneyType = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          tencostmoneytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 TenCostMoneyCnt = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          tencostmoneycnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 TenCostBootyID = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          tencostbootyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float TenDiscount = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 245)) {
          tendiscount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // int32 Replenish = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          replenish_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 EnsureShowBootyID = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          ensureshowbootyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 UnLockWishHeroCnt = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          unlockwishherocnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 UnLockWishBlessHeroCnt = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          unlockwishblessherocnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 BlessingCnt = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          blessingcnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RuleTextID = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ruletextid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CardPoolID = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          cardpoolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 WishPoolID = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          wishpoolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 UPPoolID = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          uppoolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyBoxConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.BuyBoxConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 BoxType = 1;
  if (this->_internal_boxtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_boxtype(), target);
  }

  // int32 BoxID = 2;
  if (this->_internal_boxid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_boxid(), target);
  }

  // int32 ActivitySubID = 3;
  if (this->_internal_activitysubid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_activitysubid(), target);
  }

  // int32 SortID = 4;
  if (this->_internal_sortid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_sortid(), target);
  }

  // int32 UnlockLv = 5;
  if (this->_internal_unlocklv() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_unlocklv(), target);
  }

  // string BoxName = 6;
  if (!this->_internal_boxname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxname().data(), static_cast<int>(this->_internal_boxname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_boxname(), target);
  }

  // string BoxNameColorTop = 7;
  if (!this->_internal_boxnamecolortop().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxnamecolortop().data(), static_cast<int>(this->_internal_boxnamecolortop().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxNameColorTop");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_boxnamecolortop(), target);
  }

  // string BoxNameColorDown = 8;
  if (!this->_internal_boxnamecolordown().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxnamecolordown().data(), static_cast<int>(this->_internal_boxnamecolordown().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxNameColorDown");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_boxnamecolordown(), target);
  }

  // string BoxNameOutlineColor = 9;
  if (!this->_internal_boxnameoutlinecolor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxnameoutlinecolor().data(), static_cast<int>(this->_internal_boxnameoutlinecolor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxNameOutlineColor");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_boxnameoutlinecolor(), target);
  }

  // string BoxDesc = 10;
  if (!this->_internal_boxdesc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxdesc().data(), static_cast<int>(this->_internal_boxdesc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxDesc");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_boxdesc(), target);
  }

  // string BoxDescColor = 11;
  if (!this->_internal_boxdesccolor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxdesccolor().data(), static_cast<int>(this->_internal_boxdesccolor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxDescColor");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_boxdesccolor(), target);
  }

  // string BoxDescOutlineColor = 12;
  if (!this->_internal_boxdescoutlinecolor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxdescoutlinecolor().data(), static_cast<int>(this->_internal_boxdescoutlinecolor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxDescOutlineColor");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_boxdescoutlinecolor(), target);
  }

  // string BoxIcon = 13;
  if (!this->_internal_boxicon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxicon().data(), static_cast<int>(this->_internal_boxicon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxIcon");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_boxicon(), target);
  }

  // int32 BoxPortrait = 14;
  if (this->_internal_boxportrait() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_boxportrait(), target);
  }

  // string BoxBg = 15;
  if (!this->_internal_boxbg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_boxbg().data(), static_cast<int>(this->_internal_boxbg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.BoxBg");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_boxbg(), target);
  }

  // string EntranceIcon = 16;
  if (!this->_internal_entranceicon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entranceicon().data(), static_cast<int>(this->_internal_entranceicon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.BuyBoxConfig.EntranceIcon");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_entranceicon(), target);
  }

  // int32 DrawCardPanelType = 17;
  if (this->_internal_drawcardpaneltype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_drawcardpaneltype(), target);
  }

  // int32 CostItemID = 18;
  if (this->_internal_costitemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->_internal_costitemid(), target);
  }

  // int32 CostItemCnt = 19;
  if (this->_internal_costitemcnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_costitemcnt(), target);
  }

  // int32 CostMoneyType = 20;
  if (this->_internal_costmoneytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(20, this->_internal_costmoneytype(), target);
  }

  // int32 CostMoneyCnt = 21;
  if (this->_internal_costmoneycnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(21, this->_internal_costmoneycnt(), target);
  }

  // int32 FreeRefreshint32erval = 22;
  if (this->_internal_freerefreshint32erval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(22, this->_internal_freerefreshint32erval(), target);
  }

  // int32 FirstBooty = 23;
  if (this->_internal_firstbooty() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(23, this->_internal_firstbooty(), target);
  }

  // int32 CostBootyID = 24;
  if (this->_internal_costbootyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(24, this->_internal_costbootyid(), target);
  }

  // int32 TenCostItemID = 25;
  if (this->_internal_tencostitemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(25, this->_internal_tencostitemid(), target);
  }

  // int32 TenCostItemCnt = 26;
  if (this->_internal_tencostitemcnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(26, this->_internal_tencostitemcnt(), target);
  }

  // int32 TenCostMoneyType = 27;
  if (this->_internal_tencostmoneytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(27, this->_internal_tencostmoneytype(), target);
  }

  // int32 TenCostMoneyCnt = 28;
  if (this->_internal_tencostmoneycnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(28, this->_internal_tencostmoneycnt(), target);
  }

  // int32 TenCostBootyID = 29;
  if (this->_internal_tencostbootyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(29, this->_internal_tencostbootyid(), target);
  }

  // float TenDiscount = 30;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_tendiscount = this->_internal_tendiscount();
  uint32_t raw_tendiscount;
  memcpy(&raw_tendiscount, &tmp_tendiscount, sizeof(tmp_tendiscount));
  if (raw_tendiscount != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(30, this->_internal_tendiscount(), target);
  }

  // int32 Replenish = 31;
  if (this->_internal_replenish() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(31, this->_internal_replenish(), target);
  }

  // int32 EnsureShowBootyID = 32;
  if (this->_internal_ensureshowbootyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(32, this->_internal_ensureshowbootyid(), target);
  }

  // int32 UnLockWishHeroCnt = 33;
  if (this->_internal_unlockwishherocnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(33, this->_internal_unlockwishherocnt(), target);
  }

  // int32 UnLockWishBlessHeroCnt = 34;
  if (this->_internal_unlockwishblessherocnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(34, this->_internal_unlockwishblessherocnt(), target);
  }

  // int32 BlessingCnt = 35;
  if (this->_internal_blessingcnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(35, this->_internal_blessingcnt(), target);
  }

  // int32 RuleTextID = 36;
  if (this->_internal_ruletextid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(36, this->_internal_ruletextid(), target);
  }

  // int32 CardPoolID = 37;
  if (this->_internal_cardpoolid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(37, this->_internal_cardpoolid(), target);
  }

  // int32 WishPoolID = 38;
  if (this->_internal_wishpoolid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(38, this->_internal_wishpoolid(), target);
  }

  // int32 UPPoolID = 39;
  if (this->_internal_uppoolid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(39, this->_internal_uppoolid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.BuyBoxConfig)
  return target;
}

size_t BuyBoxConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.BuyBoxConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string BoxName = 6;
  if (!this->_internal_boxname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxname());
  }

  // string BoxNameColorTop = 7;
  if (!this->_internal_boxnamecolortop().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxnamecolortop());
  }

  // string BoxNameColorDown = 8;
  if (!this->_internal_boxnamecolordown().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxnamecolordown());
  }

  // string BoxNameOutlineColor = 9;
  if (!this->_internal_boxnameoutlinecolor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxnameoutlinecolor());
  }

  // string BoxDesc = 10;
  if (!this->_internal_boxdesc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxdesc());
  }

  // string BoxDescColor = 11;
  if (!this->_internal_boxdesccolor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxdesccolor());
  }

  // string BoxDescOutlineColor = 12;
  if (!this->_internal_boxdescoutlinecolor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxdescoutlinecolor());
  }

  // string BoxIcon = 13;
  if (!this->_internal_boxicon().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxicon());
  }

  // string BoxBg = 15;
  if (!this->_internal_boxbg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_boxbg());
  }

  // string EntranceIcon = 16;
  if (!this->_internal_entranceicon().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entranceicon());
  }

  // int32 BoxType = 1;
  if (this->_internal_boxtype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_boxtype());
  }

  // int32 BoxID = 2;
  if (this->_internal_boxid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_boxid());
  }

  // int32 ActivitySubID = 3;
  if (this->_internal_activitysubid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_activitysubid());
  }

  // int32 SortID = 4;
  if (this->_internal_sortid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_sortid());
  }

  // int32 UnlockLv = 5;
  if (this->_internal_unlocklv() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_unlocklv());
  }

  // int32 BoxPortrait = 14;
  if (this->_internal_boxportrait() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_boxportrait());
  }

  // int32 DrawCardPanelType = 17;
  if (this->_internal_drawcardpaneltype() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_drawcardpaneltype());
  }

  // int32 CostItemID = 18;
  if (this->_internal_costitemid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_costitemid());
  }

  // int32 CostItemCnt = 19;
  if (this->_internal_costitemcnt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_costitemcnt());
  }

  // int32 CostMoneyType = 20;
  if (this->_internal_costmoneytype() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_costmoneytype());
  }

  // int32 CostMoneyCnt = 21;
  if (this->_internal_costmoneycnt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_costmoneycnt());
  }

  // int32 FreeRefreshint32erval = 22;
  if (this->_internal_freerefreshint32erval() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_freerefreshint32erval());
  }

  // int32 FirstBooty = 23;
  if (this->_internal_firstbooty() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_firstbooty());
  }

  // int32 CostBootyID = 24;
  if (this->_internal_costbootyid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_costbootyid());
  }

  // int32 TenCostItemID = 25;
  if (this->_internal_tencostitemid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tencostitemid());
  }

  // int32 TenCostItemCnt = 26;
  if (this->_internal_tencostitemcnt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tencostitemcnt());
  }

  // int32 TenCostMoneyType = 27;
  if (this->_internal_tencostmoneytype() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tencostmoneytype());
  }

  // int32 TenCostMoneyCnt = 28;
  if (this->_internal_tencostmoneycnt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tencostmoneycnt());
  }

  // int32 TenCostBootyID = 29;
  if (this->_internal_tencostbootyid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tencostbootyid());
  }

  // float TenDiscount = 30;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_tendiscount = this->_internal_tendiscount();
  uint32_t raw_tendiscount;
  memcpy(&raw_tendiscount, &tmp_tendiscount, sizeof(tmp_tendiscount));
  if (raw_tendiscount != 0) {
    total_size += 2 + 4;
  }

  // int32 Replenish = 31;
  if (this->_internal_replenish() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_replenish());
  }

  // int32 EnsureShowBootyID = 32;
  if (this->_internal_ensureshowbootyid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ensureshowbootyid());
  }

  // int32 UnLockWishHeroCnt = 33;
  if (this->_internal_unlockwishherocnt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unlockwishherocnt());
  }

  // int32 UnLockWishBlessHeroCnt = 34;
  if (this->_internal_unlockwishblessherocnt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unlockwishblessherocnt());
  }

  // int32 BlessingCnt = 35;
  if (this->_internal_blessingcnt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_blessingcnt());
  }

  // int32 RuleTextID = 36;
  if (this->_internal_ruletextid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ruletextid());
  }

  // int32 CardPoolID = 37;
  if (this->_internal_cardpoolid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cardpoolid());
  }

  // int32 WishPoolID = 38;
  if (this->_internal_wishpoolid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_wishpoolid());
  }

  // int32 UPPoolID = 39;
  if (this->_internal_uppoolid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uppoolid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyBoxConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BuyBoxConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyBoxConfig::GetClassData() const { return &_class_data_; }

void BuyBoxConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BuyBoxConfig *>(to)->MergeFrom(
      static_cast<const BuyBoxConfig &>(from));
}


void BuyBoxConfig::MergeFrom(const BuyBoxConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.BuyBoxConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_boxname().empty()) {
    _internal_set_boxname(from._internal_boxname());
  }
  if (!from._internal_boxnamecolortop().empty()) {
    _internal_set_boxnamecolortop(from._internal_boxnamecolortop());
  }
  if (!from._internal_boxnamecolordown().empty()) {
    _internal_set_boxnamecolordown(from._internal_boxnamecolordown());
  }
  if (!from._internal_boxnameoutlinecolor().empty()) {
    _internal_set_boxnameoutlinecolor(from._internal_boxnameoutlinecolor());
  }
  if (!from._internal_boxdesc().empty()) {
    _internal_set_boxdesc(from._internal_boxdesc());
  }
  if (!from._internal_boxdesccolor().empty()) {
    _internal_set_boxdesccolor(from._internal_boxdesccolor());
  }
  if (!from._internal_boxdescoutlinecolor().empty()) {
    _internal_set_boxdescoutlinecolor(from._internal_boxdescoutlinecolor());
  }
  if (!from._internal_boxicon().empty()) {
    _internal_set_boxicon(from._internal_boxicon());
  }
  if (!from._internal_boxbg().empty()) {
    _internal_set_boxbg(from._internal_boxbg());
  }
  if (!from._internal_entranceicon().empty()) {
    _internal_set_entranceicon(from._internal_entranceicon());
  }
  if (from._internal_boxtype() != 0) {
    _internal_set_boxtype(from._internal_boxtype());
  }
  if (from._internal_boxid() != 0) {
    _internal_set_boxid(from._internal_boxid());
  }
  if (from._internal_activitysubid() != 0) {
    _internal_set_activitysubid(from._internal_activitysubid());
  }
  if (from._internal_sortid() != 0) {
    _internal_set_sortid(from._internal_sortid());
  }
  if (from._internal_unlocklv() != 0) {
    _internal_set_unlocklv(from._internal_unlocklv());
  }
  if (from._internal_boxportrait() != 0) {
    _internal_set_boxportrait(from._internal_boxportrait());
  }
  if (from._internal_drawcardpaneltype() != 0) {
    _internal_set_drawcardpaneltype(from._internal_drawcardpaneltype());
  }
  if (from._internal_costitemid() != 0) {
    _internal_set_costitemid(from._internal_costitemid());
  }
  if (from._internal_costitemcnt() != 0) {
    _internal_set_costitemcnt(from._internal_costitemcnt());
  }
  if (from._internal_costmoneytype() != 0) {
    _internal_set_costmoneytype(from._internal_costmoneytype());
  }
  if (from._internal_costmoneycnt() != 0) {
    _internal_set_costmoneycnt(from._internal_costmoneycnt());
  }
  if (from._internal_freerefreshint32erval() != 0) {
    _internal_set_freerefreshint32erval(from._internal_freerefreshint32erval());
  }
  if (from._internal_firstbooty() != 0) {
    _internal_set_firstbooty(from._internal_firstbooty());
  }
  if (from._internal_costbootyid() != 0) {
    _internal_set_costbootyid(from._internal_costbootyid());
  }
  if (from._internal_tencostitemid() != 0) {
    _internal_set_tencostitemid(from._internal_tencostitemid());
  }
  if (from._internal_tencostitemcnt() != 0) {
    _internal_set_tencostitemcnt(from._internal_tencostitemcnt());
  }
  if (from._internal_tencostmoneytype() != 0) {
    _internal_set_tencostmoneytype(from._internal_tencostmoneytype());
  }
  if (from._internal_tencostmoneycnt() != 0) {
    _internal_set_tencostmoneycnt(from._internal_tencostmoneycnt());
  }
  if (from._internal_tencostbootyid() != 0) {
    _internal_set_tencostbootyid(from._internal_tencostbootyid());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_tendiscount = from._internal_tendiscount();
  uint32_t raw_tendiscount;
  memcpy(&raw_tendiscount, &tmp_tendiscount, sizeof(tmp_tendiscount));
  if (raw_tendiscount != 0) {
    _internal_set_tendiscount(from._internal_tendiscount());
  }
  if (from._internal_replenish() != 0) {
    _internal_set_replenish(from._internal_replenish());
  }
  if (from._internal_ensureshowbootyid() != 0) {
    _internal_set_ensureshowbootyid(from._internal_ensureshowbootyid());
  }
  if (from._internal_unlockwishherocnt() != 0) {
    _internal_set_unlockwishherocnt(from._internal_unlockwishherocnt());
  }
  if (from._internal_unlockwishblessherocnt() != 0) {
    _internal_set_unlockwishblessherocnt(from._internal_unlockwishblessherocnt());
  }
  if (from._internal_blessingcnt() != 0) {
    _internal_set_blessingcnt(from._internal_blessingcnt());
  }
  if (from._internal_ruletextid() != 0) {
    _internal_set_ruletextid(from._internal_ruletextid());
  }
  if (from._internal_cardpoolid() != 0) {
    _internal_set_cardpoolid(from._internal_cardpoolid());
  }
  if (from._internal_wishpoolid() != 0) {
    _internal_set_wishpoolid(from._internal_wishpoolid());
  }
  if (from._internal_uppoolid() != 0) {
    _internal_set_uppoolid(from._internal_uppoolid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyBoxConfig::CopyFrom(const BuyBoxConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.BuyBoxConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyBoxConfig::IsInitialized() const {
  return true;
}

void BuyBoxConfig::InternalSwap(BuyBoxConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxname_, lhs_arena,
      &other->boxname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxnamecolortop_, lhs_arena,
      &other->boxnamecolortop_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxnamecolordown_, lhs_arena,
      &other->boxnamecolordown_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxnameoutlinecolor_, lhs_arena,
      &other->boxnameoutlinecolor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxdesc_, lhs_arena,
      &other->boxdesc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxdesccolor_, lhs_arena,
      &other->boxdesccolor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxdescoutlinecolor_, lhs_arena,
      &other->boxdescoutlinecolor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxicon_, lhs_arena,
      &other->boxicon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &boxbg_, lhs_arena,
      &other->boxbg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &entranceicon_, lhs_arena,
      &other->entranceicon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuyBoxConfig, uppoolid_)
      + sizeof(BuyBoxConfig::uppoolid_)
      - PROTOBUF_FIELD_OFFSET(BuyBoxConfig, boxtype_)>(
          reinterpret_cast<char*>(&boxtype_),
          reinterpret_cast<char*>(&other->boxtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyBoxConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_BoxConfig_2eproto_getter, &descriptor_table_BoxConfig_2eproto_once,
      file_level_metadata_BoxConfig_2eproto[0]);
}

// ===================================================================

class BuyBoxConfigList::_Internal {
 public:
};

BuyBoxConfigList::BuyBoxConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:resource.BuyBoxConfigList)
}
BuyBoxConfigList::BuyBoxConfigList(const BuyBoxConfigList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.BuyBoxConfigList)
}

inline void BuyBoxConfigList::SharedCtor() {
}

BuyBoxConfigList::~BuyBoxConfigList() {
  // @@protoc_insertion_point(destructor:resource.BuyBoxConfigList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BuyBoxConfigList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyBoxConfigList::ArenaDtor(void* object) {
  BuyBoxConfigList* _this = reinterpret_cast< BuyBoxConfigList* >(object);
  (void)_this;
}
void BuyBoxConfigList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuyBoxConfigList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BuyBoxConfigList::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.BuyBoxConfigList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyBoxConfigList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.BuyBoxConfig data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyBoxConfigList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.BuyBoxConfigList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.BuyBoxConfig data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.BuyBoxConfigList)
  return target;
}

size_t BuyBoxConfigList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.BuyBoxConfigList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.BuyBoxConfig data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyBoxConfigList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BuyBoxConfigList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyBoxConfigList::GetClassData() const { return &_class_data_; }

void BuyBoxConfigList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BuyBoxConfigList *>(to)->MergeFrom(
      static_cast<const BuyBoxConfigList &>(from));
}


void BuyBoxConfigList::MergeFrom(const BuyBoxConfigList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.BuyBoxConfigList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyBoxConfigList::CopyFrom(const BuyBoxConfigList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.BuyBoxConfigList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyBoxConfigList::IsInitialized() const {
  return true;
}

void BuyBoxConfigList::InternalSwap(BuyBoxConfigList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyBoxConfigList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_BoxConfig_2eproto_getter, &descriptor_table_BoxConfig_2eproto_once,
      file_level_metadata_BoxConfig_2eproto[1]);
}

// ===================================================================

class BuyBoxChanceConfig::_Internal {
 public:
};

BuyBoxChanceConfig::BuyBoxChanceConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:resource.BuyBoxChanceConfig)
}
BuyBoxChanceConfig::BuyBoxChanceConfig(const BuyBoxChanceConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cardpoolid_, &from.cardpoolid_,
    static_cast<size_t>(reinterpret_cast<char*>(&chance_) -
    reinterpret_cast<char*>(&cardpoolid_)) + sizeof(chance_));
  // @@protoc_insertion_point(copy_constructor:resource.BuyBoxChanceConfig)
}

inline void BuyBoxChanceConfig::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&cardpoolid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&chance_) -
    reinterpret_cast<char*>(&cardpoolid_)) + sizeof(chance_));
}

BuyBoxChanceConfig::~BuyBoxChanceConfig() {
  // @@protoc_insertion_point(destructor:resource.BuyBoxChanceConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BuyBoxChanceConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyBoxChanceConfig::ArenaDtor(void* object) {
  BuyBoxChanceConfig* _this = reinterpret_cast< BuyBoxChanceConfig* >(object);
  (void)_this;
}
void BuyBoxChanceConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuyBoxChanceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BuyBoxChanceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.BuyBoxChanceConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cardpoolid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chance_) -
      reinterpret_cast<char*>(&cardpoolid_)) + sizeof(chance_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyBoxChanceConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 CardPoolID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          cardpoolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 HeroStar = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          herostar_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 HeroID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          heroid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float Chance = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          chance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyBoxChanceConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.BuyBoxChanceConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 CardPoolID = 1;
  if (this->_internal_cardpoolid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cardpoolid(), target);
  }

  // int32 HeroStar = 2;
  if (this->_internal_herostar() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_herostar(), target);
  }

  // int32 HeroID = 3;
  if (this->_internal_heroid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_heroid(), target);
  }

  // float Chance = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_chance = this->_internal_chance();
  uint32_t raw_chance;
  memcpy(&raw_chance, &tmp_chance, sizeof(tmp_chance));
  if (raw_chance != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_chance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.BuyBoxChanceConfig)
  return target;
}

size_t BuyBoxChanceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.BuyBoxChanceConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 CardPoolID = 1;
  if (this->_internal_cardpoolid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_cardpoolid());
  }

  // int32 HeroStar = 2;
  if (this->_internal_herostar() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_herostar());
  }

  // int32 HeroID = 3;
  if (this->_internal_heroid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_heroid());
  }

  // float Chance = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_chance = this->_internal_chance();
  uint32_t raw_chance;
  memcpy(&raw_chance, &tmp_chance, sizeof(tmp_chance));
  if (raw_chance != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyBoxChanceConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BuyBoxChanceConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyBoxChanceConfig::GetClassData() const { return &_class_data_; }

void BuyBoxChanceConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BuyBoxChanceConfig *>(to)->MergeFrom(
      static_cast<const BuyBoxChanceConfig &>(from));
}


void BuyBoxChanceConfig::MergeFrom(const BuyBoxChanceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.BuyBoxChanceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cardpoolid() != 0) {
    _internal_set_cardpoolid(from._internal_cardpoolid());
  }
  if (from._internal_herostar() != 0) {
    _internal_set_herostar(from._internal_herostar());
  }
  if (from._internal_heroid() != 0) {
    _internal_set_heroid(from._internal_heroid());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_chance = from._internal_chance();
  uint32_t raw_chance;
  memcpy(&raw_chance, &tmp_chance, sizeof(tmp_chance));
  if (raw_chance != 0) {
    _internal_set_chance(from._internal_chance());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyBoxChanceConfig::CopyFrom(const BuyBoxChanceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.BuyBoxChanceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyBoxChanceConfig::IsInitialized() const {
  return true;
}

void BuyBoxChanceConfig::InternalSwap(BuyBoxChanceConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuyBoxChanceConfig, chance_)
      + sizeof(BuyBoxChanceConfig::chance_)
      - PROTOBUF_FIELD_OFFSET(BuyBoxChanceConfig, cardpoolid_)>(
          reinterpret_cast<char*>(&cardpoolid_),
          reinterpret_cast<char*>(&other->cardpoolid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyBoxChanceConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_BoxConfig_2eproto_getter, &descriptor_table_BoxConfig_2eproto_once,
      file_level_metadata_BoxConfig_2eproto[2]);
}

// ===================================================================

class BuyBoxChanceConfigList::_Internal {
 public:
};

BuyBoxChanceConfigList::BuyBoxChanceConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:resource.BuyBoxChanceConfigList)
}
BuyBoxChanceConfigList::BuyBoxChanceConfigList(const BuyBoxChanceConfigList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.BuyBoxChanceConfigList)
}

inline void BuyBoxChanceConfigList::SharedCtor() {
}

BuyBoxChanceConfigList::~BuyBoxChanceConfigList() {
  // @@protoc_insertion_point(destructor:resource.BuyBoxChanceConfigList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BuyBoxChanceConfigList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyBoxChanceConfigList::ArenaDtor(void* object) {
  BuyBoxChanceConfigList* _this = reinterpret_cast< BuyBoxChanceConfigList* >(object);
  (void)_this;
}
void BuyBoxChanceConfigList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuyBoxChanceConfigList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BuyBoxChanceConfigList::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.BuyBoxChanceConfigList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyBoxChanceConfigList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.BuyBoxChanceConfig data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyBoxChanceConfigList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.BuyBoxChanceConfigList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.BuyBoxChanceConfig data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.BuyBoxChanceConfigList)
  return target;
}

size_t BuyBoxChanceConfigList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.BuyBoxChanceConfigList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.BuyBoxChanceConfig data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyBoxChanceConfigList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BuyBoxChanceConfigList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyBoxChanceConfigList::GetClassData() const { return &_class_data_; }

void BuyBoxChanceConfigList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BuyBoxChanceConfigList *>(to)->MergeFrom(
      static_cast<const BuyBoxChanceConfigList &>(from));
}


void BuyBoxChanceConfigList::MergeFrom(const BuyBoxChanceConfigList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.BuyBoxChanceConfigList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyBoxChanceConfigList::CopyFrom(const BuyBoxChanceConfigList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.BuyBoxChanceConfigList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyBoxChanceConfigList::IsInitialized() const {
  return true;
}

void BuyBoxChanceConfigList::InternalSwap(BuyBoxChanceConfigList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyBoxChanceConfigList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_BoxConfig_2eproto_getter, &descriptor_table_BoxConfig_2eproto_once,
      file_level_metadata_BoxConfig_2eproto[3]);
}

// ===================================================================

class BuyBoxWishConfig::_Internal {
 public:
};

BuyBoxWishConfig::BuyBoxWishConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:resource.BuyBoxWishConfig)
}
BuyBoxWishConfig::BuyBoxWishConfig(const BuyBoxWishConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&wishpoolid_, &from.wishpoolid_,
    static_cast<size_t>(reinterpret_cast<char*>(&coreflag_) -
    reinterpret_cast<char*>(&wishpoolid_)) + sizeof(coreflag_));
  // @@protoc_insertion_point(copy_constructor:resource.BuyBoxWishConfig)
}

inline void BuyBoxWishConfig::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&wishpoolid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&coreflag_) -
    reinterpret_cast<char*>(&wishpoolid_)) + sizeof(coreflag_));
}

BuyBoxWishConfig::~BuyBoxWishConfig() {
  // @@protoc_insertion_point(destructor:resource.BuyBoxWishConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BuyBoxWishConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyBoxWishConfig::ArenaDtor(void* object) {
  BuyBoxWishConfig* _this = reinterpret_cast< BuyBoxWishConfig* >(object);
  (void)_this;
}
void BuyBoxWishConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuyBoxWishConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BuyBoxWishConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.BuyBoxWishConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wishpoolid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coreflag_) -
      reinterpret_cast<char*>(&wishpoolid_)) + sizeof(coreflag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyBoxWishConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 WishPoolID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          wishpoolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 HeroID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          heroid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CoreFlag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          coreflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyBoxWishConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.BuyBoxWishConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 WishPoolID = 1;
  if (this->_internal_wishpoolid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_wishpoolid(), target);
  }

  // int32 HeroID = 2;
  if (this->_internal_heroid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_heroid(), target);
  }

  // int32 CoreFlag = 3;
  if (this->_internal_coreflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_coreflag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.BuyBoxWishConfig)
  return target;
}

size_t BuyBoxWishConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.BuyBoxWishConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 WishPoolID = 1;
  if (this->_internal_wishpoolid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_wishpoolid());
  }

  // int32 HeroID = 2;
  if (this->_internal_heroid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_heroid());
  }

  // int32 CoreFlag = 3;
  if (this->_internal_coreflag() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_coreflag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyBoxWishConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BuyBoxWishConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyBoxWishConfig::GetClassData() const { return &_class_data_; }

void BuyBoxWishConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BuyBoxWishConfig *>(to)->MergeFrom(
      static_cast<const BuyBoxWishConfig &>(from));
}


void BuyBoxWishConfig::MergeFrom(const BuyBoxWishConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.BuyBoxWishConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_wishpoolid() != 0) {
    _internal_set_wishpoolid(from._internal_wishpoolid());
  }
  if (from._internal_heroid() != 0) {
    _internal_set_heroid(from._internal_heroid());
  }
  if (from._internal_coreflag() != 0) {
    _internal_set_coreflag(from._internal_coreflag());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyBoxWishConfig::CopyFrom(const BuyBoxWishConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.BuyBoxWishConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyBoxWishConfig::IsInitialized() const {
  return true;
}

void BuyBoxWishConfig::InternalSwap(BuyBoxWishConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuyBoxWishConfig, coreflag_)
      + sizeof(BuyBoxWishConfig::coreflag_)
      - PROTOBUF_FIELD_OFFSET(BuyBoxWishConfig, wishpoolid_)>(
          reinterpret_cast<char*>(&wishpoolid_),
          reinterpret_cast<char*>(&other->wishpoolid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyBoxWishConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_BoxConfig_2eproto_getter, &descriptor_table_BoxConfig_2eproto_once,
      file_level_metadata_BoxConfig_2eproto[4]);
}

// ===================================================================

class BuyBoxWishConfigList::_Internal {
 public:
};

BuyBoxWishConfigList::BuyBoxWishConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:resource.BuyBoxWishConfigList)
}
BuyBoxWishConfigList::BuyBoxWishConfigList(const BuyBoxWishConfigList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.BuyBoxWishConfigList)
}

inline void BuyBoxWishConfigList::SharedCtor() {
}

BuyBoxWishConfigList::~BuyBoxWishConfigList() {
  // @@protoc_insertion_point(destructor:resource.BuyBoxWishConfigList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BuyBoxWishConfigList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyBoxWishConfigList::ArenaDtor(void* object) {
  BuyBoxWishConfigList* _this = reinterpret_cast< BuyBoxWishConfigList* >(object);
  (void)_this;
}
void BuyBoxWishConfigList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuyBoxWishConfigList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BuyBoxWishConfigList::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.BuyBoxWishConfigList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyBoxWishConfigList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.BuyBoxWishConfig data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyBoxWishConfigList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.BuyBoxWishConfigList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.BuyBoxWishConfig data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.BuyBoxWishConfigList)
  return target;
}

size_t BuyBoxWishConfigList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.BuyBoxWishConfigList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.BuyBoxWishConfig data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyBoxWishConfigList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BuyBoxWishConfigList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyBoxWishConfigList::GetClassData() const { return &_class_data_; }

void BuyBoxWishConfigList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BuyBoxWishConfigList *>(to)->MergeFrom(
      static_cast<const BuyBoxWishConfigList &>(from));
}


void BuyBoxWishConfigList::MergeFrom(const BuyBoxWishConfigList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.BuyBoxWishConfigList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyBoxWishConfigList::CopyFrom(const BuyBoxWishConfigList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.BuyBoxWishConfigList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyBoxWishConfigList::IsInitialized() const {
  return true;
}

void BuyBoxWishConfigList::InternalSwap(BuyBoxWishConfigList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyBoxWishConfigList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_BoxConfig_2eproto_getter, &descriptor_table_BoxConfig_2eproto_once,
      file_level_metadata_BoxConfig_2eproto[5]);
}

// ===================================================================

class UpBoxConfig::_Internal {
 public:
};

UpBoxConfig::UpBoxConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:resource.UpBoxConfig)
}
UpBoxConfig::UpBoxConfig(const UpBoxConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  herobg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    herobg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_herobg().empty()) {
    herobg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_herobg(), 
      GetArenaForAllocation());
  }
  heronamebg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    heronamebg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_heronamebg().empty()) {
    heronamebg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_heronamebg(), 
      GetArenaForAllocation());
  }
  desctext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    desctext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_desctext().empty()) {
    desctext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desctext(), 
      GetArenaForAllocation());
  }
  desctextcolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    desctextcolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_desctextcolor().empty()) {
    desctextcolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desctextcolor(), 
      GetArenaForAllocation());
  }
  herodescbg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    herodescbg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_herodescbg().empty()) {
    herodescbg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_herodescbg(), 
      GetArenaForAllocation());
  }
  ensurebg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ensurebg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ensurebg().empty()) {
    ensurebg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ensurebg(), 
      GetArenaForAllocation());
  }
  ensuredescoutlinecolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ensuredescoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ensuredescoutlinecolor().empty()) {
    ensuredescoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ensuredescoutlinecolor(), 
      GetArenaForAllocation());
  }
  ensuredesccolortop_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ensuredesccolortop_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ensuredesccolortop().empty()) {
    ensuredesccolortop_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ensuredesccolortop(), 
      GetArenaForAllocation());
  }
  ensuredesccolordown_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ensuredesccolordown_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ensuredesccolordown().empty()) {
    ensuredesccolordown_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ensuredesccolordown(), 
      GetArenaForAllocation());
  }
  singledrawbtnimg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    singledrawbtnimg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_singledrawbtnimg().empty()) {
    singledrawbtnimg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_singledrawbtnimg(), 
      GetArenaForAllocation());
  }
  ::memcpy(&uppoolid_, &from.uppoolid_,
    static_cast<size_t>(reinterpret_cast<char*>(&minensureid_) -
    reinterpret_cast<char*>(&uppoolid_)) + sizeof(minensureid_));
  // @@protoc_insertion_point(copy_constructor:resource.UpBoxConfig)
}

inline void UpBoxConfig::SharedCtor() {
herobg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  herobg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
heronamebg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  heronamebg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
desctext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  desctext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
desctextcolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  desctextcolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
herodescbg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  herodescbg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ensurebg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ensurebg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ensuredescoutlinecolor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ensuredescoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ensuredesccolortop_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ensuredesccolortop_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ensuredesccolordown_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ensuredesccolordown_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
singledrawbtnimg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  singledrawbtnimg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uppoolid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&minensureid_) -
    reinterpret_cast<char*>(&uppoolid_)) + sizeof(minensureid_));
}

UpBoxConfig::~UpBoxConfig() {
  // @@protoc_insertion_point(destructor:resource.UpBoxConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpBoxConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  herobg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  heronamebg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desctext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desctextcolor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  herodescbg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ensurebg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ensuredescoutlinecolor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ensuredesccolortop_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ensuredesccolordown_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  singledrawbtnimg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpBoxConfig::ArenaDtor(void* object) {
  UpBoxConfig* _this = reinterpret_cast< UpBoxConfig* >(object);
  (void)_this;
}
void UpBoxConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpBoxConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpBoxConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpBoxConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  herobg_.ClearToEmpty();
  heronamebg_.ClearToEmpty();
  desctext_.ClearToEmpty();
  desctextcolor_.ClearToEmpty();
  herodescbg_.ClearToEmpty();
  ensurebg_.ClearToEmpty();
  ensuredescoutlinecolor_.ClearToEmpty();
  ensuredesccolortop_.ClearToEmpty();
  ensuredesccolordown_.ClearToEmpty();
  singledrawbtnimg_.ClearToEmpty();
  ::memset(&uppoolid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minensureid_) -
      reinterpret_cast<char*>(&uppoolid_)) + sizeof(minensureid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpBoxConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 UPPoolID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uppoolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 HeroID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          heroid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string HeroBg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_herobg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.HeroBg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 HeroModel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          heromodel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string HeroNameBg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_heronamebg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.HeroNameBg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string DescText = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_desctext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.DescText"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string DescTextColor = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_desctextcolor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.DescTextColor"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float DescPosX = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          descposx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float DescPosY = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 77)) {
          descposy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // string HeroDescBg = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_herodescbg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.HeroDescBg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string EnsureBg = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_ensurebg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.EnsureBg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string EnsureDescOutlineColor = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_ensuredescoutlinecolor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.EnsureDescOutlineColor"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string EnsureDescColorTop = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_ensuredesccolortop();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.EnsureDescColorTop"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string EnsureDescColorDown = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_ensuredesccolordown();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.EnsureDescColorDown"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SingleDrawBtnImg = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_singledrawbtnimg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "resource.UpBoxConfig.SingleDrawBtnImg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 EnsureID = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          ensureid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CostBootyID = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          costbootyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 MinEnsureID = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          minensureid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpBoxConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpBoxConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 UPPoolID = 1;
  if (this->_internal_uppoolid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uppoolid(), target);
  }

  // int32 HeroID = 2;
  if (this->_internal_heroid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_heroid(), target);
  }

  // string HeroBg = 3;
  if (!this->_internal_herobg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_herobg().data(), static_cast<int>(this->_internal_herobg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.HeroBg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_herobg(), target);
  }

  // int32 HeroModel = 4;
  if (this->_internal_heromodel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_heromodel(), target);
  }

  // string HeroNameBg = 5;
  if (!this->_internal_heronamebg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_heronamebg().data(), static_cast<int>(this->_internal_heronamebg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.HeroNameBg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_heronamebg(), target);
  }

  // string DescText = 6;
  if (!this->_internal_desctext().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desctext().data(), static_cast<int>(this->_internal_desctext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.DescText");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_desctext(), target);
  }

  // string DescTextColor = 7;
  if (!this->_internal_desctextcolor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desctextcolor().data(), static_cast<int>(this->_internal_desctextcolor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.DescTextColor");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_desctextcolor(), target);
  }

  // float DescPosX = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_descposx = this->_internal_descposx();
  uint32_t raw_descposx;
  memcpy(&raw_descposx, &tmp_descposx, sizeof(tmp_descposx));
  if (raw_descposx != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_descposx(), target);
  }

  // float DescPosY = 9;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_descposy = this->_internal_descposy();
  uint32_t raw_descposy;
  memcpy(&raw_descposy, &tmp_descposy, sizeof(tmp_descposy));
  if (raw_descposy != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_descposy(), target);
  }

  // string HeroDescBg = 10;
  if (!this->_internal_herodescbg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_herodescbg().data(), static_cast<int>(this->_internal_herodescbg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.HeroDescBg");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_herodescbg(), target);
  }

  // string EnsureBg = 11;
  if (!this->_internal_ensurebg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ensurebg().data(), static_cast<int>(this->_internal_ensurebg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.EnsureBg");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_ensurebg(), target);
  }

  // string EnsureDescOutlineColor = 12;
  if (!this->_internal_ensuredescoutlinecolor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ensuredescoutlinecolor().data(), static_cast<int>(this->_internal_ensuredescoutlinecolor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.EnsureDescOutlineColor");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_ensuredescoutlinecolor(), target);
  }

  // string EnsureDescColorTop = 13;
  if (!this->_internal_ensuredesccolortop().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ensuredesccolortop().data(), static_cast<int>(this->_internal_ensuredesccolortop().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.EnsureDescColorTop");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_ensuredesccolortop(), target);
  }

  // string EnsureDescColorDown = 14;
  if (!this->_internal_ensuredesccolordown().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ensuredesccolordown().data(), static_cast<int>(this->_internal_ensuredesccolordown().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.EnsureDescColorDown");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_ensuredesccolordown(), target);
  }

  // string SingleDrawBtnImg = 15;
  if (!this->_internal_singledrawbtnimg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_singledrawbtnimg().data(), static_cast<int>(this->_internal_singledrawbtnimg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "resource.UpBoxConfig.SingleDrawBtnImg");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_singledrawbtnimg(), target);
  }

  // int32 EnsureID = 16;
  if (this->_internal_ensureid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_ensureid(), target);
  }

  // int32 CostBootyID = 17;
  if (this->_internal_costbootyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_costbootyid(), target);
  }

  // int32 MinEnsureID = 18;
  if (this->_internal_minensureid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->_internal_minensureid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpBoxConfig)
  return target;
}

size_t UpBoxConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpBoxConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string HeroBg = 3;
  if (!this->_internal_herobg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_herobg());
  }

  // string HeroNameBg = 5;
  if (!this->_internal_heronamebg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_heronamebg());
  }

  // string DescText = 6;
  if (!this->_internal_desctext().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desctext());
  }

  // string DescTextColor = 7;
  if (!this->_internal_desctextcolor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desctextcolor());
  }

  // string HeroDescBg = 10;
  if (!this->_internal_herodescbg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_herodescbg());
  }

  // string EnsureBg = 11;
  if (!this->_internal_ensurebg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ensurebg());
  }

  // string EnsureDescOutlineColor = 12;
  if (!this->_internal_ensuredescoutlinecolor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ensuredescoutlinecolor());
  }

  // string EnsureDescColorTop = 13;
  if (!this->_internal_ensuredesccolortop().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ensuredesccolortop());
  }

  // string EnsureDescColorDown = 14;
  if (!this->_internal_ensuredesccolordown().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ensuredesccolordown());
  }

  // string SingleDrawBtnImg = 15;
  if (!this->_internal_singledrawbtnimg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_singledrawbtnimg());
  }

  // int32 UPPoolID = 1;
  if (this->_internal_uppoolid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_uppoolid());
  }

  // int32 HeroID = 2;
  if (this->_internal_heroid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_heroid());
  }

  // int32 HeroModel = 4;
  if (this->_internal_heromodel() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_heromodel());
  }

  // float DescPosX = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_descposx = this->_internal_descposx();
  uint32_t raw_descposx;
  memcpy(&raw_descposx, &tmp_descposx, sizeof(tmp_descposx));
  if (raw_descposx != 0) {
    total_size += 1 + 4;
  }

  // float DescPosY = 9;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_descposy = this->_internal_descposy();
  uint32_t raw_descposy;
  memcpy(&raw_descposy, &tmp_descposy, sizeof(tmp_descposy));
  if (raw_descposy != 0) {
    total_size += 1 + 4;
  }

  // int32 EnsureID = 16;
  if (this->_internal_ensureid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ensureid());
  }

  // int32 CostBootyID = 17;
  if (this->_internal_costbootyid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_costbootyid());
  }

  // int32 MinEnsureID = 18;
  if (this->_internal_minensureid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_minensureid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpBoxConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpBoxConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpBoxConfig::GetClassData() const { return &_class_data_; }

void UpBoxConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpBoxConfig *>(to)->MergeFrom(
      static_cast<const UpBoxConfig &>(from));
}


void UpBoxConfig::MergeFrom(const UpBoxConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpBoxConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_herobg().empty()) {
    _internal_set_herobg(from._internal_herobg());
  }
  if (!from._internal_heronamebg().empty()) {
    _internal_set_heronamebg(from._internal_heronamebg());
  }
  if (!from._internal_desctext().empty()) {
    _internal_set_desctext(from._internal_desctext());
  }
  if (!from._internal_desctextcolor().empty()) {
    _internal_set_desctextcolor(from._internal_desctextcolor());
  }
  if (!from._internal_herodescbg().empty()) {
    _internal_set_herodescbg(from._internal_herodescbg());
  }
  if (!from._internal_ensurebg().empty()) {
    _internal_set_ensurebg(from._internal_ensurebg());
  }
  if (!from._internal_ensuredescoutlinecolor().empty()) {
    _internal_set_ensuredescoutlinecolor(from._internal_ensuredescoutlinecolor());
  }
  if (!from._internal_ensuredesccolortop().empty()) {
    _internal_set_ensuredesccolortop(from._internal_ensuredesccolortop());
  }
  if (!from._internal_ensuredesccolordown().empty()) {
    _internal_set_ensuredesccolordown(from._internal_ensuredesccolordown());
  }
  if (!from._internal_singledrawbtnimg().empty()) {
    _internal_set_singledrawbtnimg(from._internal_singledrawbtnimg());
  }
  if (from._internal_uppoolid() != 0) {
    _internal_set_uppoolid(from._internal_uppoolid());
  }
  if (from._internal_heroid() != 0) {
    _internal_set_heroid(from._internal_heroid());
  }
  if (from._internal_heromodel() != 0) {
    _internal_set_heromodel(from._internal_heromodel());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_descposx = from._internal_descposx();
  uint32_t raw_descposx;
  memcpy(&raw_descposx, &tmp_descposx, sizeof(tmp_descposx));
  if (raw_descposx != 0) {
    _internal_set_descposx(from._internal_descposx());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_descposy = from._internal_descposy();
  uint32_t raw_descposy;
  memcpy(&raw_descposy, &tmp_descposy, sizeof(tmp_descposy));
  if (raw_descposy != 0) {
    _internal_set_descposy(from._internal_descposy());
  }
  if (from._internal_ensureid() != 0) {
    _internal_set_ensureid(from._internal_ensureid());
  }
  if (from._internal_costbootyid() != 0) {
    _internal_set_costbootyid(from._internal_costbootyid());
  }
  if (from._internal_minensureid() != 0) {
    _internal_set_minensureid(from._internal_minensureid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpBoxConfig::CopyFrom(const UpBoxConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpBoxConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpBoxConfig::IsInitialized() const {
  return true;
}

void UpBoxConfig::InternalSwap(UpBoxConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &herobg_, lhs_arena,
      &other->herobg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &heronamebg_, lhs_arena,
      &other->heronamebg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &desctext_, lhs_arena,
      &other->desctext_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &desctextcolor_, lhs_arena,
      &other->desctextcolor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &herodescbg_, lhs_arena,
      &other->herodescbg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ensurebg_, lhs_arena,
      &other->ensurebg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ensuredescoutlinecolor_, lhs_arena,
      &other->ensuredescoutlinecolor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ensuredesccolortop_, lhs_arena,
      &other->ensuredesccolortop_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ensuredesccolordown_, lhs_arena,
      &other->ensuredesccolordown_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &singledrawbtnimg_, lhs_arena,
      &other->singledrawbtnimg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpBoxConfig, minensureid_)
      + sizeof(UpBoxConfig::minensureid_)
      - PROTOBUF_FIELD_OFFSET(UpBoxConfig, uppoolid_)>(
          reinterpret_cast<char*>(&uppoolid_),
          reinterpret_cast<char*>(&other->uppoolid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpBoxConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_BoxConfig_2eproto_getter, &descriptor_table_BoxConfig_2eproto_once,
      file_level_metadata_BoxConfig_2eproto[6]);
}

// ===================================================================

class UpBoxConfigList::_Internal {
 public:
};

UpBoxConfigList::UpBoxConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:resource.UpBoxConfigList)
}
UpBoxConfigList::UpBoxConfigList(const UpBoxConfigList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:resource.UpBoxConfigList)
}

inline void UpBoxConfigList::SharedCtor() {
}

UpBoxConfigList::~UpBoxConfigList() {
  // @@protoc_insertion_point(destructor:resource.UpBoxConfigList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpBoxConfigList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpBoxConfigList::ArenaDtor(void* object) {
  UpBoxConfigList* _this = reinterpret_cast< UpBoxConfigList* >(object);
  (void)_this;
}
void UpBoxConfigList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpBoxConfigList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpBoxConfigList::Clear() {
// @@protoc_insertion_point(message_clear_start:resource.UpBoxConfigList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpBoxConfigList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .resource.UpBoxConfig data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpBoxConfigList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource.UpBoxConfigList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .resource.UpBoxConfig data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource.UpBoxConfigList)
  return target;
}

size_t UpBoxConfigList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:resource.UpBoxConfigList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .resource.UpBoxConfig data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpBoxConfigList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpBoxConfigList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpBoxConfigList::GetClassData() const { return &_class_data_; }

void UpBoxConfigList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpBoxConfigList *>(to)->MergeFrom(
      static_cast<const UpBoxConfigList &>(from));
}


void UpBoxConfigList::MergeFrom(const UpBoxConfigList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:resource.UpBoxConfigList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpBoxConfigList::CopyFrom(const UpBoxConfigList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:resource.UpBoxConfigList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpBoxConfigList::IsInitialized() const {
  return true;
}

void UpBoxConfigList::InternalSwap(UpBoxConfigList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpBoxConfigList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_BoxConfig_2eproto_getter, &descriptor_table_BoxConfig_2eproto_once,
      file_level_metadata_BoxConfig_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace resource
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::resource::BuyBoxConfig* Arena::CreateMaybeMessage< ::resource::BuyBoxConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::BuyBoxConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::BuyBoxConfigList* Arena::CreateMaybeMessage< ::resource::BuyBoxConfigList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::BuyBoxConfigList >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::BuyBoxChanceConfig* Arena::CreateMaybeMessage< ::resource::BuyBoxChanceConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::BuyBoxChanceConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::BuyBoxChanceConfigList* Arena::CreateMaybeMessage< ::resource::BuyBoxChanceConfigList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::BuyBoxChanceConfigList >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::BuyBoxWishConfig* Arena::CreateMaybeMessage< ::resource::BuyBoxWishConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::BuyBoxWishConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::BuyBoxWishConfigList* Arena::CreateMaybeMessage< ::resource::BuyBoxWishConfigList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::BuyBoxWishConfigList >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpBoxConfig* Arena::CreateMaybeMessage< ::resource::UpBoxConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpBoxConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::resource::UpBoxConfigList* Arena::CreateMaybeMessage< ::resource::UpBoxConfigList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::resource::UpBoxConfigList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
