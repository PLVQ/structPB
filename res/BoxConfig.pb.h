// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BoxConfig.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_BoxConfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_BoxConfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_BoxConfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_BoxConfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_BoxConfig_2eproto;
namespace resource {
class BuyBoxChanceConfig;
struct BuyBoxChanceConfigDefaultTypeInternal;
extern BuyBoxChanceConfigDefaultTypeInternal _BuyBoxChanceConfig_default_instance_;
class BuyBoxChanceConfigList;
struct BuyBoxChanceConfigListDefaultTypeInternal;
extern BuyBoxChanceConfigListDefaultTypeInternal _BuyBoxChanceConfigList_default_instance_;
class BuyBoxConfig;
struct BuyBoxConfigDefaultTypeInternal;
extern BuyBoxConfigDefaultTypeInternal _BuyBoxConfig_default_instance_;
class BuyBoxConfigList;
struct BuyBoxConfigListDefaultTypeInternal;
extern BuyBoxConfigListDefaultTypeInternal _BuyBoxConfigList_default_instance_;
class BuyBoxWishConfig;
struct BuyBoxWishConfigDefaultTypeInternal;
extern BuyBoxWishConfigDefaultTypeInternal _BuyBoxWishConfig_default_instance_;
class BuyBoxWishConfigList;
struct BuyBoxWishConfigListDefaultTypeInternal;
extern BuyBoxWishConfigListDefaultTypeInternal _BuyBoxWishConfigList_default_instance_;
class UpBoxConfig;
struct UpBoxConfigDefaultTypeInternal;
extern UpBoxConfigDefaultTypeInternal _UpBoxConfig_default_instance_;
class UpBoxConfigList;
struct UpBoxConfigListDefaultTypeInternal;
extern UpBoxConfigListDefaultTypeInternal _UpBoxConfigList_default_instance_;
}  // namespace resource
PROTOBUF_NAMESPACE_OPEN
template<> ::resource::BuyBoxChanceConfig* Arena::CreateMaybeMessage<::resource::BuyBoxChanceConfig>(Arena*);
template<> ::resource::BuyBoxChanceConfigList* Arena::CreateMaybeMessage<::resource::BuyBoxChanceConfigList>(Arena*);
template<> ::resource::BuyBoxConfig* Arena::CreateMaybeMessage<::resource::BuyBoxConfig>(Arena*);
template<> ::resource::BuyBoxConfigList* Arena::CreateMaybeMessage<::resource::BuyBoxConfigList>(Arena*);
template<> ::resource::BuyBoxWishConfig* Arena::CreateMaybeMessage<::resource::BuyBoxWishConfig>(Arena*);
template<> ::resource::BuyBoxWishConfigList* Arena::CreateMaybeMessage<::resource::BuyBoxWishConfigList>(Arena*);
template<> ::resource::UpBoxConfig* Arena::CreateMaybeMessage<::resource::UpBoxConfig>(Arena*);
template<> ::resource::UpBoxConfigList* Arena::CreateMaybeMessage<::resource::UpBoxConfigList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace resource {

// ===================================================================

class BuyBoxConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:resource.BuyBoxConfig) */ {
 public:
  inline BuyBoxConfig() : BuyBoxConfig(nullptr) {}
  ~BuyBoxConfig() override;
  explicit constexpr BuyBoxConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BuyBoxConfig(const BuyBoxConfig& from);
  BuyBoxConfig(BuyBoxConfig&& from) noexcept
    : BuyBoxConfig() {
    *this = ::std::move(from);
  }

  inline BuyBoxConfig& operator=(const BuyBoxConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuyBoxConfig& operator=(BuyBoxConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuyBoxConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuyBoxConfig* internal_default_instance() {
    return reinterpret_cast<const BuyBoxConfig*>(
               &_BuyBoxConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BuyBoxConfig& a, BuyBoxConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(BuyBoxConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuyBoxConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuyBoxConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuyBoxConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BuyBoxConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BuyBoxConfig& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuyBoxConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "resource.BuyBoxConfig";
  }
  protected:
  explicit BuyBoxConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoxNameFieldNumber = 6,
    kBoxNameColorTopFieldNumber = 7,
    kBoxNameColorDownFieldNumber = 8,
    kBoxNameOutlineColorFieldNumber = 9,
    kBoxDescFieldNumber = 10,
    kBoxDescColorFieldNumber = 11,
    kBoxDescOutlineColorFieldNumber = 12,
    kBoxIconFieldNumber = 13,
    kBoxBgFieldNumber = 15,
    kEntranceIconFieldNumber = 16,
    kBoxTypeFieldNumber = 1,
    kBoxIDFieldNumber = 2,
    kActivitySubIDFieldNumber = 3,
    kSortIDFieldNumber = 4,
    kUnlockLvFieldNumber = 5,
    kBoxPortraitFieldNumber = 14,
    kDrawCardPanelTypeFieldNumber = 17,
    kCostItemIDFieldNumber = 18,
    kCostItemCntFieldNumber = 19,
    kCostMoneyTypeFieldNumber = 20,
    kCostMoneyCntFieldNumber = 21,
    kFreeRefreshint32ErvalFieldNumber = 22,
    kFirstBootyFieldNumber = 23,
    kCostBootyIDFieldNumber = 24,
    kTenCostItemIDFieldNumber = 25,
    kTenCostItemCntFieldNumber = 26,
    kTenCostMoneyTypeFieldNumber = 27,
    kTenCostMoneyCntFieldNumber = 28,
    kTenCostBootyIDFieldNumber = 29,
    kTenDiscountFieldNumber = 30,
    kReplenishFieldNumber = 31,
    kEnsureShowBootyIDFieldNumber = 32,
    kUnLockWishHeroCntFieldNumber = 33,
    kUnLockWishBlessHeroCntFieldNumber = 34,
    kBlessingCntFieldNumber = 35,
    kRuleTextIDFieldNumber = 36,
    kCardPoolIDFieldNumber = 37,
    kWishPoolIDFieldNumber = 38,
    kUPPoolIDFieldNumber = 39,
  };
  // string BoxName = 6;
  void clear_boxname();
  const std::string& boxname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxname();
  PROTOBUF_NODISCARD std::string* release_boxname();
  void set_allocated_boxname(std::string* boxname);
  private:
  const std::string& _internal_boxname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxname(const std::string& value);
  std::string* _internal_mutable_boxname();
  public:

  // string BoxNameColorTop = 7;
  void clear_boxnamecolortop();
  const std::string& boxnamecolortop() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxnamecolortop(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxnamecolortop();
  PROTOBUF_NODISCARD std::string* release_boxnamecolortop();
  void set_allocated_boxnamecolortop(std::string* boxnamecolortop);
  private:
  const std::string& _internal_boxnamecolortop() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxnamecolortop(const std::string& value);
  std::string* _internal_mutable_boxnamecolortop();
  public:

  // string BoxNameColorDown = 8;
  void clear_boxnamecolordown();
  const std::string& boxnamecolordown() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxnamecolordown(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxnamecolordown();
  PROTOBUF_NODISCARD std::string* release_boxnamecolordown();
  void set_allocated_boxnamecolordown(std::string* boxnamecolordown);
  private:
  const std::string& _internal_boxnamecolordown() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxnamecolordown(const std::string& value);
  std::string* _internal_mutable_boxnamecolordown();
  public:

  // string BoxNameOutlineColor = 9;
  void clear_boxnameoutlinecolor();
  const std::string& boxnameoutlinecolor() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxnameoutlinecolor(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxnameoutlinecolor();
  PROTOBUF_NODISCARD std::string* release_boxnameoutlinecolor();
  void set_allocated_boxnameoutlinecolor(std::string* boxnameoutlinecolor);
  private:
  const std::string& _internal_boxnameoutlinecolor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxnameoutlinecolor(const std::string& value);
  std::string* _internal_mutable_boxnameoutlinecolor();
  public:

  // string BoxDesc = 10;
  void clear_boxdesc();
  const std::string& boxdesc() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxdesc(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxdesc();
  PROTOBUF_NODISCARD std::string* release_boxdesc();
  void set_allocated_boxdesc(std::string* boxdesc);
  private:
  const std::string& _internal_boxdesc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxdesc(const std::string& value);
  std::string* _internal_mutable_boxdesc();
  public:

  // string BoxDescColor = 11;
  void clear_boxdesccolor();
  const std::string& boxdesccolor() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxdesccolor(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxdesccolor();
  PROTOBUF_NODISCARD std::string* release_boxdesccolor();
  void set_allocated_boxdesccolor(std::string* boxdesccolor);
  private:
  const std::string& _internal_boxdesccolor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxdesccolor(const std::string& value);
  std::string* _internal_mutable_boxdesccolor();
  public:

  // string BoxDescOutlineColor = 12;
  void clear_boxdescoutlinecolor();
  const std::string& boxdescoutlinecolor() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxdescoutlinecolor(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxdescoutlinecolor();
  PROTOBUF_NODISCARD std::string* release_boxdescoutlinecolor();
  void set_allocated_boxdescoutlinecolor(std::string* boxdescoutlinecolor);
  private:
  const std::string& _internal_boxdescoutlinecolor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxdescoutlinecolor(const std::string& value);
  std::string* _internal_mutable_boxdescoutlinecolor();
  public:

  // string BoxIcon = 13;
  void clear_boxicon();
  const std::string& boxicon() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxicon(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxicon();
  PROTOBUF_NODISCARD std::string* release_boxicon();
  void set_allocated_boxicon(std::string* boxicon);
  private:
  const std::string& _internal_boxicon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxicon(const std::string& value);
  std::string* _internal_mutable_boxicon();
  public:

  // string BoxBg = 15;
  void clear_boxbg();
  const std::string& boxbg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_boxbg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_boxbg();
  PROTOBUF_NODISCARD std::string* release_boxbg();
  void set_allocated_boxbg(std::string* boxbg);
  private:
  const std::string& _internal_boxbg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boxbg(const std::string& value);
  std::string* _internal_mutable_boxbg();
  public:

  // string EntranceIcon = 16;
  void clear_entranceicon();
  const std::string& entranceicon() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entranceicon(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entranceicon();
  PROTOBUF_NODISCARD std::string* release_entranceicon();
  void set_allocated_entranceicon(std::string* entranceicon);
  private:
  const std::string& _internal_entranceicon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entranceicon(const std::string& value);
  std::string* _internal_mutable_entranceicon();
  public:

  // int32 BoxType = 1;
  void clear_boxtype();
  int32_t boxtype() const;
  void set_boxtype(int32_t value);
  private:
  int32_t _internal_boxtype() const;
  void _internal_set_boxtype(int32_t value);
  public:

  // int32 BoxID = 2;
  void clear_boxid();
  int32_t boxid() const;
  void set_boxid(int32_t value);
  private:
  int32_t _internal_boxid() const;
  void _internal_set_boxid(int32_t value);
  public:

  // int32 ActivitySubID = 3;
  void clear_activitysubid();
  int32_t activitysubid() const;
  void set_activitysubid(int32_t value);
  private:
  int32_t _internal_activitysubid() const;
  void _internal_set_activitysubid(int32_t value);
  public:

  // int32 SortID = 4;
  void clear_sortid();
  int32_t sortid() const;
  void set_sortid(int32_t value);
  private:
  int32_t _internal_sortid() const;
  void _internal_set_sortid(int32_t value);
  public:

  // int32 UnlockLv = 5;
  void clear_unlocklv();
  int32_t unlocklv() const;
  void set_unlocklv(int32_t value);
  private:
  int32_t _internal_unlocklv() const;
  void _internal_set_unlocklv(int32_t value);
  public:

  // int32 BoxPortrait = 14;
  void clear_boxportrait();
  int32_t boxportrait() const;
  void set_boxportrait(int32_t value);
  private:
  int32_t _internal_boxportrait() const;
  void _internal_set_boxportrait(int32_t value);
  public:

  // int32 DrawCardPanelType = 17;
  void clear_drawcardpaneltype();
  int32_t drawcardpaneltype() const;
  void set_drawcardpaneltype(int32_t value);
  private:
  int32_t _internal_drawcardpaneltype() const;
  void _internal_set_drawcardpaneltype(int32_t value);
  public:

  // int32 CostItemID = 18;
  void clear_costitemid();
  int32_t costitemid() const;
  void set_costitemid(int32_t value);
  private:
  int32_t _internal_costitemid() const;
  void _internal_set_costitemid(int32_t value);
  public:

  // int32 CostItemCnt = 19;
  void clear_costitemcnt();
  int32_t costitemcnt() const;
  void set_costitemcnt(int32_t value);
  private:
  int32_t _internal_costitemcnt() const;
  void _internal_set_costitemcnt(int32_t value);
  public:

  // int32 CostMoneyType = 20;
  void clear_costmoneytype();
  int32_t costmoneytype() const;
  void set_costmoneytype(int32_t value);
  private:
  int32_t _internal_costmoneytype() const;
  void _internal_set_costmoneytype(int32_t value);
  public:

  // int32 CostMoneyCnt = 21;
  void clear_costmoneycnt();
  int32_t costmoneycnt() const;
  void set_costmoneycnt(int32_t value);
  private:
  int32_t _internal_costmoneycnt() const;
  void _internal_set_costmoneycnt(int32_t value);
  public:

  // int32 FreeRefreshint32erval = 22;
  void clear_freerefreshint32erval();
  int32_t freerefreshint32erval() const;
  void set_freerefreshint32erval(int32_t value);
  private:
  int32_t _internal_freerefreshint32erval() const;
  void _internal_set_freerefreshint32erval(int32_t value);
  public:

  // int32 FirstBooty = 23;
  void clear_firstbooty();
  int32_t firstbooty() const;
  void set_firstbooty(int32_t value);
  private:
  int32_t _internal_firstbooty() const;
  void _internal_set_firstbooty(int32_t value);
  public:

  // int32 CostBootyID = 24;
  void clear_costbootyid();
  int32_t costbootyid() const;
  void set_costbootyid(int32_t value);
  private:
  int32_t _internal_costbootyid() const;
  void _internal_set_costbootyid(int32_t value);
  public:

  // int32 TenCostItemID = 25;
  void clear_tencostitemid();
  int32_t tencostitemid() const;
  void set_tencostitemid(int32_t value);
  private:
  int32_t _internal_tencostitemid() const;
  void _internal_set_tencostitemid(int32_t value);
  public:

  // int32 TenCostItemCnt = 26;
  void clear_tencostitemcnt();
  int32_t tencostitemcnt() const;
  void set_tencostitemcnt(int32_t value);
  private:
  int32_t _internal_tencostitemcnt() const;
  void _internal_set_tencostitemcnt(int32_t value);
  public:

  // int32 TenCostMoneyType = 27;
  void clear_tencostmoneytype();
  int32_t tencostmoneytype() const;
  void set_tencostmoneytype(int32_t value);
  private:
  int32_t _internal_tencostmoneytype() const;
  void _internal_set_tencostmoneytype(int32_t value);
  public:

  // int32 TenCostMoneyCnt = 28;
  void clear_tencostmoneycnt();
  int32_t tencostmoneycnt() const;
  void set_tencostmoneycnt(int32_t value);
  private:
  int32_t _internal_tencostmoneycnt() const;
  void _internal_set_tencostmoneycnt(int32_t value);
  public:

  // int32 TenCostBootyID = 29;
  void clear_tencostbootyid();
  int32_t tencostbootyid() const;
  void set_tencostbootyid(int32_t value);
  private:
  int32_t _internal_tencostbootyid() const;
  void _internal_set_tencostbootyid(int32_t value);
  public:

  // float TenDiscount = 30;
  void clear_tendiscount();
  float tendiscount() const;
  void set_tendiscount(float value);
  private:
  float _internal_tendiscount() const;
  void _internal_set_tendiscount(float value);
  public:

  // int32 Replenish = 31;
  void clear_replenish();
  int32_t replenish() const;
  void set_replenish(int32_t value);
  private:
  int32_t _internal_replenish() const;
  void _internal_set_replenish(int32_t value);
  public:

  // int32 EnsureShowBootyID = 32;
  void clear_ensureshowbootyid();
  int32_t ensureshowbootyid() const;
  void set_ensureshowbootyid(int32_t value);
  private:
  int32_t _internal_ensureshowbootyid() const;
  void _internal_set_ensureshowbootyid(int32_t value);
  public:

  // int32 UnLockWishHeroCnt = 33;
  void clear_unlockwishherocnt();
  int32_t unlockwishherocnt() const;
  void set_unlockwishherocnt(int32_t value);
  private:
  int32_t _internal_unlockwishherocnt() const;
  void _internal_set_unlockwishherocnt(int32_t value);
  public:

  // int32 UnLockWishBlessHeroCnt = 34;
  void clear_unlockwishblessherocnt();
  int32_t unlockwishblessherocnt() const;
  void set_unlockwishblessherocnt(int32_t value);
  private:
  int32_t _internal_unlockwishblessherocnt() const;
  void _internal_set_unlockwishblessherocnt(int32_t value);
  public:

  // int32 BlessingCnt = 35;
  void clear_blessingcnt();
  int32_t blessingcnt() const;
  void set_blessingcnt(int32_t value);
  private:
  int32_t _internal_blessingcnt() const;
  void _internal_set_blessingcnt(int32_t value);
  public:

  // int32 RuleTextID = 36;
  void clear_ruletextid();
  int32_t ruletextid() const;
  void set_ruletextid(int32_t value);
  private:
  int32_t _internal_ruletextid() const;
  void _internal_set_ruletextid(int32_t value);
  public:

  // int32 CardPoolID = 37;
  void clear_cardpoolid();
  int32_t cardpoolid() const;
  void set_cardpoolid(int32_t value);
  private:
  int32_t _internal_cardpoolid() const;
  void _internal_set_cardpoolid(int32_t value);
  public:

  // int32 WishPoolID = 38;
  void clear_wishpoolid();
  int32_t wishpoolid() const;
  void set_wishpoolid(int32_t value);
  private:
  int32_t _internal_wishpoolid() const;
  void _internal_set_wishpoolid(int32_t value);
  public:

  // int32 UPPoolID = 39;
  void clear_uppoolid();
  int32_t uppoolid() const;
  void set_uppoolid(int32_t value);
  private:
  int32_t _internal_uppoolid() const;
  void _internal_set_uppoolid(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:resource.BuyBoxConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxnamecolortop_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxnamecolordown_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxnameoutlinecolor_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxdesc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxdesccolor_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxdescoutlinecolor_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxicon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boxbg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entranceicon_;
  int32_t boxtype_;
  int32_t boxid_;
  int32_t activitysubid_;
  int32_t sortid_;
  int32_t unlocklv_;
  int32_t boxportrait_;
  int32_t drawcardpaneltype_;
  int32_t costitemid_;
  int32_t costitemcnt_;
  int32_t costmoneytype_;
  int32_t costmoneycnt_;
  int32_t freerefreshint32erval_;
  int32_t firstbooty_;
  int32_t costbootyid_;
  int32_t tencostitemid_;
  int32_t tencostitemcnt_;
  int32_t tencostmoneytype_;
  int32_t tencostmoneycnt_;
  int32_t tencostbootyid_;
  float tendiscount_;
  int32_t replenish_;
  int32_t ensureshowbootyid_;
  int32_t unlockwishherocnt_;
  int32_t unlockwishblessherocnt_;
  int32_t blessingcnt_;
  int32_t ruletextid_;
  int32_t cardpoolid_;
  int32_t wishpoolid_;
  int32_t uppoolid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BoxConfig_2eproto;
};
// -------------------------------------------------------------------

class BuyBoxConfigList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:resource.BuyBoxConfigList) */ {
 public:
  inline BuyBoxConfigList() : BuyBoxConfigList(nullptr) {}
  ~BuyBoxConfigList() override;
  explicit constexpr BuyBoxConfigList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BuyBoxConfigList(const BuyBoxConfigList& from);
  BuyBoxConfigList(BuyBoxConfigList&& from) noexcept
    : BuyBoxConfigList() {
    *this = ::std::move(from);
  }

  inline BuyBoxConfigList& operator=(const BuyBoxConfigList& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuyBoxConfigList& operator=(BuyBoxConfigList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuyBoxConfigList& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuyBoxConfigList* internal_default_instance() {
    return reinterpret_cast<const BuyBoxConfigList*>(
               &_BuyBoxConfigList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BuyBoxConfigList& a, BuyBoxConfigList& b) {
    a.Swap(&b);
  }
  inline void Swap(BuyBoxConfigList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuyBoxConfigList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuyBoxConfigList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuyBoxConfigList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BuyBoxConfigList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BuyBoxConfigList& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuyBoxConfigList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "resource.BuyBoxConfigList";
  }
  protected:
  explicit BuyBoxConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .resource.BuyBoxConfig data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::resource::BuyBoxConfig* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxConfig >*
      mutable_data();
  private:
  const ::resource::BuyBoxConfig& _internal_data(int index) const;
  ::resource::BuyBoxConfig* _internal_add_data();
  public:
  const ::resource::BuyBoxConfig& data(int index) const;
  ::resource::BuyBoxConfig* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxConfig >&
      data() const;

  // @@protoc_insertion_point(class_scope:resource.BuyBoxConfigList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxConfig > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BoxConfig_2eproto;
};
// -------------------------------------------------------------------

class BuyBoxChanceConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:resource.BuyBoxChanceConfig) */ {
 public:
  inline BuyBoxChanceConfig() : BuyBoxChanceConfig(nullptr) {}
  ~BuyBoxChanceConfig() override;
  explicit constexpr BuyBoxChanceConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BuyBoxChanceConfig(const BuyBoxChanceConfig& from);
  BuyBoxChanceConfig(BuyBoxChanceConfig&& from) noexcept
    : BuyBoxChanceConfig() {
    *this = ::std::move(from);
  }

  inline BuyBoxChanceConfig& operator=(const BuyBoxChanceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuyBoxChanceConfig& operator=(BuyBoxChanceConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuyBoxChanceConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuyBoxChanceConfig* internal_default_instance() {
    return reinterpret_cast<const BuyBoxChanceConfig*>(
               &_BuyBoxChanceConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(BuyBoxChanceConfig& a, BuyBoxChanceConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(BuyBoxChanceConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuyBoxChanceConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuyBoxChanceConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuyBoxChanceConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BuyBoxChanceConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BuyBoxChanceConfig& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuyBoxChanceConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "resource.BuyBoxChanceConfig";
  }
  protected:
  explicit BuyBoxChanceConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardPoolIDFieldNumber = 1,
    kHeroStarFieldNumber = 2,
    kHeroIDFieldNumber = 3,
    kChanceFieldNumber = 4,
  };
  // int32 CardPoolID = 1;
  void clear_cardpoolid();
  int32_t cardpoolid() const;
  void set_cardpoolid(int32_t value);
  private:
  int32_t _internal_cardpoolid() const;
  void _internal_set_cardpoolid(int32_t value);
  public:

  // int32 HeroStar = 2;
  void clear_herostar();
  int32_t herostar() const;
  void set_herostar(int32_t value);
  private:
  int32_t _internal_herostar() const;
  void _internal_set_herostar(int32_t value);
  public:

  // int32 HeroID = 3;
  void clear_heroid();
  int32_t heroid() const;
  void set_heroid(int32_t value);
  private:
  int32_t _internal_heroid() const;
  void _internal_set_heroid(int32_t value);
  public:

  // float Chance = 4;
  void clear_chance();
  float chance() const;
  void set_chance(float value);
  private:
  float _internal_chance() const;
  void _internal_set_chance(float value);
  public:

  // @@protoc_insertion_point(class_scope:resource.BuyBoxChanceConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t cardpoolid_;
  int32_t herostar_;
  int32_t heroid_;
  float chance_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BoxConfig_2eproto;
};
// -------------------------------------------------------------------

class BuyBoxChanceConfigList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:resource.BuyBoxChanceConfigList) */ {
 public:
  inline BuyBoxChanceConfigList() : BuyBoxChanceConfigList(nullptr) {}
  ~BuyBoxChanceConfigList() override;
  explicit constexpr BuyBoxChanceConfigList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BuyBoxChanceConfigList(const BuyBoxChanceConfigList& from);
  BuyBoxChanceConfigList(BuyBoxChanceConfigList&& from) noexcept
    : BuyBoxChanceConfigList() {
    *this = ::std::move(from);
  }

  inline BuyBoxChanceConfigList& operator=(const BuyBoxChanceConfigList& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuyBoxChanceConfigList& operator=(BuyBoxChanceConfigList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuyBoxChanceConfigList& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuyBoxChanceConfigList* internal_default_instance() {
    return reinterpret_cast<const BuyBoxChanceConfigList*>(
               &_BuyBoxChanceConfigList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(BuyBoxChanceConfigList& a, BuyBoxChanceConfigList& b) {
    a.Swap(&b);
  }
  inline void Swap(BuyBoxChanceConfigList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuyBoxChanceConfigList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuyBoxChanceConfigList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuyBoxChanceConfigList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BuyBoxChanceConfigList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BuyBoxChanceConfigList& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuyBoxChanceConfigList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "resource.BuyBoxChanceConfigList";
  }
  protected:
  explicit BuyBoxChanceConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .resource.BuyBoxChanceConfig data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::resource::BuyBoxChanceConfig* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxChanceConfig >*
      mutable_data();
  private:
  const ::resource::BuyBoxChanceConfig& _internal_data(int index) const;
  ::resource::BuyBoxChanceConfig* _internal_add_data();
  public:
  const ::resource::BuyBoxChanceConfig& data(int index) const;
  ::resource::BuyBoxChanceConfig* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxChanceConfig >&
      data() const;

  // @@protoc_insertion_point(class_scope:resource.BuyBoxChanceConfigList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxChanceConfig > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BoxConfig_2eproto;
};
// -------------------------------------------------------------------

class BuyBoxWishConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:resource.BuyBoxWishConfig) */ {
 public:
  inline BuyBoxWishConfig() : BuyBoxWishConfig(nullptr) {}
  ~BuyBoxWishConfig() override;
  explicit constexpr BuyBoxWishConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BuyBoxWishConfig(const BuyBoxWishConfig& from);
  BuyBoxWishConfig(BuyBoxWishConfig&& from) noexcept
    : BuyBoxWishConfig() {
    *this = ::std::move(from);
  }

  inline BuyBoxWishConfig& operator=(const BuyBoxWishConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuyBoxWishConfig& operator=(BuyBoxWishConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuyBoxWishConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuyBoxWishConfig* internal_default_instance() {
    return reinterpret_cast<const BuyBoxWishConfig*>(
               &_BuyBoxWishConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(BuyBoxWishConfig& a, BuyBoxWishConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(BuyBoxWishConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuyBoxWishConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuyBoxWishConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuyBoxWishConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BuyBoxWishConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BuyBoxWishConfig& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuyBoxWishConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "resource.BuyBoxWishConfig";
  }
  protected:
  explicit BuyBoxWishConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWishPoolIDFieldNumber = 1,
    kHeroIDFieldNumber = 2,
    kCoreFlagFieldNumber = 3,
  };
  // int32 WishPoolID = 1;
  void clear_wishpoolid();
  int32_t wishpoolid() const;
  void set_wishpoolid(int32_t value);
  private:
  int32_t _internal_wishpoolid() const;
  void _internal_set_wishpoolid(int32_t value);
  public:

  // int32 HeroID = 2;
  void clear_heroid();
  int32_t heroid() const;
  void set_heroid(int32_t value);
  private:
  int32_t _internal_heroid() const;
  void _internal_set_heroid(int32_t value);
  public:

  // int32 CoreFlag = 3;
  void clear_coreflag();
  int32_t coreflag() const;
  void set_coreflag(int32_t value);
  private:
  int32_t _internal_coreflag() const;
  void _internal_set_coreflag(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:resource.BuyBoxWishConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t wishpoolid_;
  int32_t heroid_;
  int32_t coreflag_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BoxConfig_2eproto;
};
// -------------------------------------------------------------------

class BuyBoxWishConfigList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:resource.BuyBoxWishConfigList) */ {
 public:
  inline BuyBoxWishConfigList() : BuyBoxWishConfigList(nullptr) {}
  ~BuyBoxWishConfigList() override;
  explicit constexpr BuyBoxWishConfigList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BuyBoxWishConfigList(const BuyBoxWishConfigList& from);
  BuyBoxWishConfigList(BuyBoxWishConfigList&& from) noexcept
    : BuyBoxWishConfigList() {
    *this = ::std::move(from);
  }

  inline BuyBoxWishConfigList& operator=(const BuyBoxWishConfigList& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuyBoxWishConfigList& operator=(BuyBoxWishConfigList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuyBoxWishConfigList& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuyBoxWishConfigList* internal_default_instance() {
    return reinterpret_cast<const BuyBoxWishConfigList*>(
               &_BuyBoxWishConfigList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(BuyBoxWishConfigList& a, BuyBoxWishConfigList& b) {
    a.Swap(&b);
  }
  inline void Swap(BuyBoxWishConfigList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuyBoxWishConfigList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuyBoxWishConfigList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BuyBoxWishConfigList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BuyBoxWishConfigList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BuyBoxWishConfigList& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuyBoxWishConfigList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "resource.BuyBoxWishConfigList";
  }
  protected:
  explicit BuyBoxWishConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .resource.BuyBoxWishConfig data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::resource::BuyBoxWishConfig* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxWishConfig >*
      mutable_data();
  private:
  const ::resource::BuyBoxWishConfig& _internal_data(int index) const;
  ::resource::BuyBoxWishConfig* _internal_add_data();
  public:
  const ::resource::BuyBoxWishConfig& data(int index) const;
  ::resource::BuyBoxWishConfig* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxWishConfig >&
      data() const;

  // @@protoc_insertion_point(class_scope:resource.BuyBoxWishConfigList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxWishConfig > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BoxConfig_2eproto;
};
// -------------------------------------------------------------------

class UpBoxConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:resource.UpBoxConfig) */ {
 public:
  inline UpBoxConfig() : UpBoxConfig(nullptr) {}
  ~UpBoxConfig() override;
  explicit constexpr UpBoxConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpBoxConfig(const UpBoxConfig& from);
  UpBoxConfig(UpBoxConfig&& from) noexcept
    : UpBoxConfig() {
    *this = ::std::move(from);
  }

  inline UpBoxConfig& operator=(const UpBoxConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpBoxConfig& operator=(UpBoxConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpBoxConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpBoxConfig* internal_default_instance() {
    return reinterpret_cast<const UpBoxConfig*>(
               &_UpBoxConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(UpBoxConfig& a, UpBoxConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(UpBoxConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpBoxConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpBoxConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpBoxConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UpBoxConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const UpBoxConfig& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpBoxConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "resource.UpBoxConfig";
  }
  protected:
  explicit UpBoxConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroBgFieldNumber = 3,
    kHeroNameBgFieldNumber = 5,
    kDescTextFieldNumber = 6,
    kDescTextColorFieldNumber = 7,
    kHeroDescBgFieldNumber = 10,
    kEnsureBgFieldNumber = 11,
    kEnsureDescOutlineColorFieldNumber = 12,
    kEnsureDescColorTopFieldNumber = 13,
    kEnsureDescColorDownFieldNumber = 14,
    kSingleDrawBtnImgFieldNumber = 15,
    kUPPoolIDFieldNumber = 1,
    kHeroIDFieldNumber = 2,
    kHeroModelFieldNumber = 4,
    kDescPosXFieldNumber = 8,
    kDescPosYFieldNumber = 9,
    kEnsureIDFieldNumber = 16,
    kCostBootyIDFieldNumber = 17,
    kMinEnsureIDFieldNumber = 18,
  };
  // string HeroBg = 3;
  void clear_herobg();
  const std::string& herobg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_herobg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_herobg();
  PROTOBUF_NODISCARD std::string* release_herobg();
  void set_allocated_herobg(std::string* herobg);
  private:
  const std::string& _internal_herobg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_herobg(const std::string& value);
  std::string* _internal_mutable_herobg();
  public:

  // string HeroNameBg = 5;
  void clear_heronamebg();
  const std::string& heronamebg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_heronamebg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_heronamebg();
  PROTOBUF_NODISCARD std::string* release_heronamebg();
  void set_allocated_heronamebg(std::string* heronamebg);
  private:
  const std::string& _internal_heronamebg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_heronamebg(const std::string& value);
  std::string* _internal_mutable_heronamebg();
  public:

  // string DescText = 6;
  void clear_desctext();
  const std::string& desctext() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_desctext(ArgT0&& arg0, ArgT... args);
  std::string* mutable_desctext();
  PROTOBUF_NODISCARD std::string* release_desctext();
  void set_allocated_desctext(std::string* desctext);
  private:
  const std::string& _internal_desctext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_desctext(const std::string& value);
  std::string* _internal_mutable_desctext();
  public:

  // string DescTextColor = 7;
  void clear_desctextcolor();
  const std::string& desctextcolor() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_desctextcolor(ArgT0&& arg0, ArgT... args);
  std::string* mutable_desctextcolor();
  PROTOBUF_NODISCARD std::string* release_desctextcolor();
  void set_allocated_desctextcolor(std::string* desctextcolor);
  private:
  const std::string& _internal_desctextcolor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_desctextcolor(const std::string& value);
  std::string* _internal_mutable_desctextcolor();
  public:

  // string HeroDescBg = 10;
  void clear_herodescbg();
  const std::string& herodescbg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_herodescbg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_herodescbg();
  PROTOBUF_NODISCARD std::string* release_herodescbg();
  void set_allocated_herodescbg(std::string* herodescbg);
  private:
  const std::string& _internal_herodescbg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_herodescbg(const std::string& value);
  std::string* _internal_mutable_herodescbg();
  public:

  // string EnsureBg = 11;
  void clear_ensurebg();
  const std::string& ensurebg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ensurebg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ensurebg();
  PROTOBUF_NODISCARD std::string* release_ensurebg();
  void set_allocated_ensurebg(std::string* ensurebg);
  private:
  const std::string& _internal_ensurebg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ensurebg(const std::string& value);
  std::string* _internal_mutable_ensurebg();
  public:

  // string EnsureDescOutlineColor = 12;
  void clear_ensuredescoutlinecolor();
  const std::string& ensuredescoutlinecolor() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ensuredescoutlinecolor(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ensuredescoutlinecolor();
  PROTOBUF_NODISCARD std::string* release_ensuredescoutlinecolor();
  void set_allocated_ensuredescoutlinecolor(std::string* ensuredescoutlinecolor);
  private:
  const std::string& _internal_ensuredescoutlinecolor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ensuredescoutlinecolor(const std::string& value);
  std::string* _internal_mutable_ensuredescoutlinecolor();
  public:

  // string EnsureDescColorTop = 13;
  void clear_ensuredesccolortop();
  const std::string& ensuredesccolortop() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ensuredesccolortop(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ensuredesccolortop();
  PROTOBUF_NODISCARD std::string* release_ensuredesccolortop();
  void set_allocated_ensuredesccolortop(std::string* ensuredesccolortop);
  private:
  const std::string& _internal_ensuredesccolortop() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ensuredesccolortop(const std::string& value);
  std::string* _internal_mutable_ensuredesccolortop();
  public:

  // string EnsureDescColorDown = 14;
  void clear_ensuredesccolordown();
  const std::string& ensuredesccolordown() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ensuredesccolordown(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ensuredesccolordown();
  PROTOBUF_NODISCARD std::string* release_ensuredesccolordown();
  void set_allocated_ensuredesccolordown(std::string* ensuredesccolordown);
  private:
  const std::string& _internal_ensuredesccolordown() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ensuredesccolordown(const std::string& value);
  std::string* _internal_mutable_ensuredesccolordown();
  public:

  // string SingleDrawBtnImg = 15;
  void clear_singledrawbtnimg();
  const std::string& singledrawbtnimg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_singledrawbtnimg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_singledrawbtnimg();
  PROTOBUF_NODISCARD std::string* release_singledrawbtnimg();
  void set_allocated_singledrawbtnimg(std::string* singledrawbtnimg);
  private:
  const std::string& _internal_singledrawbtnimg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_singledrawbtnimg(const std::string& value);
  std::string* _internal_mutable_singledrawbtnimg();
  public:

  // int32 UPPoolID = 1;
  void clear_uppoolid();
  int32_t uppoolid() const;
  void set_uppoolid(int32_t value);
  private:
  int32_t _internal_uppoolid() const;
  void _internal_set_uppoolid(int32_t value);
  public:

  // int32 HeroID = 2;
  void clear_heroid();
  int32_t heroid() const;
  void set_heroid(int32_t value);
  private:
  int32_t _internal_heroid() const;
  void _internal_set_heroid(int32_t value);
  public:

  // int32 HeroModel = 4;
  void clear_heromodel();
  int32_t heromodel() const;
  void set_heromodel(int32_t value);
  private:
  int32_t _internal_heromodel() const;
  void _internal_set_heromodel(int32_t value);
  public:

  // float DescPosX = 8;
  void clear_descposx();
  float descposx() const;
  void set_descposx(float value);
  private:
  float _internal_descposx() const;
  void _internal_set_descposx(float value);
  public:

  // float DescPosY = 9;
  void clear_descposy();
  float descposy() const;
  void set_descposy(float value);
  private:
  float _internal_descposy() const;
  void _internal_set_descposy(float value);
  public:

  // int32 EnsureID = 16;
  void clear_ensureid();
  int32_t ensureid() const;
  void set_ensureid(int32_t value);
  private:
  int32_t _internal_ensureid() const;
  void _internal_set_ensureid(int32_t value);
  public:

  // int32 CostBootyID = 17;
  void clear_costbootyid();
  int32_t costbootyid() const;
  void set_costbootyid(int32_t value);
  private:
  int32_t _internal_costbootyid() const;
  void _internal_set_costbootyid(int32_t value);
  public:

  // int32 MinEnsureID = 18;
  void clear_minensureid();
  int32_t minensureid() const;
  void set_minensureid(int32_t value);
  private:
  int32_t _internal_minensureid() const;
  void _internal_set_minensureid(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:resource.UpBoxConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herobg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heronamebg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr desctext_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr desctextcolor_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herodescbg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ensurebg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ensuredescoutlinecolor_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ensuredesccolortop_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ensuredesccolordown_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr singledrawbtnimg_;
  int32_t uppoolid_;
  int32_t heroid_;
  int32_t heromodel_;
  float descposx_;
  float descposy_;
  int32_t ensureid_;
  int32_t costbootyid_;
  int32_t minensureid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BoxConfig_2eproto;
};
// -------------------------------------------------------------------

class UpBoxConfigList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:resource.UpBoxConfigList) */ {
 public:
  inline UpBoxConfigList() : UpBoxConfigList(nullptr) {}
  ~UpBoxConfigList() override;
  explicit constexpr UpBoxConfigList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpBoxConfigList(const UpBoxConfigList& from);
  UpBoxConfigList(UpBoxConfigList&& from) noexcept
    : UpBoxConfigList() {
    *this = ::std::move(from);
  }

  inline UpBoxConfigList& operator=(const UpBoxConfigList& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpBoxConfigList& operator=(UpBoxConfigList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpBoxConfigList& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpBoxConfigList* internal_default_instance() {
    return reinterpret_cast<const UpBoxConfigList*>(
               &_UpBoxConfigList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(UpBoxConfigList& a, UpBoxConfigList& b) {
    a.Swap(&b);
  }
  inline void Swap(UpBoxConfigList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpBoxConfigList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpBoxConfigList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpBoxConfigList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UpBoxConfigList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const UpBoxConfigList& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpBoxConfigList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "resource.UpBoxConfigList";
  }
  protected:
  explicit UpBoxConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .resource.UpBoxConfig data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::resource::UpBoxConfig* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::UpBoxConfig >*
      mutable_data();
  private:
  const ::resource::UpBoxConfig& _internal_data(int index) const;
  ::resource::UpBoxConfig* _internal_add_data();
  public:
  const ::resource::UpBoxConfig& data(int index) const;
  ::resource::UpBoxConfig* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::UpBoxConfig >&
      data() const;

  // @@protoc_insertion_point(class_scope:resource.UpBoxConfigList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::UpBoxConfig > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BoxConfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BuyBoxConfig

// int32 BoxType = 1;
inline void BuyBoxConfig::clear_boxtype() {
  boxtype_ = 0;
}
inline int32_t BuyBoxConfig::_internal_boxtype() const {
  return boxtype_;
}
inline int32_t BuyBoxConfig::boxtype() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxType)
  return _internal_boxtype();
}
inline void BuyBoxConfig::_internal_set_boxtype(int32_t value) {
  
  boxtype_ = value;
}
inline void BuyBoxConfig::set_boxtype(int32_t value) {
  _internal_set_boxtype(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxType)
}

// int32 BoxID = 2;
inline void BuyBoxConfig::clear_boxid() {
  boxid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_boxid() const {
  return boxid_;
}
inline int32_t BuyBoxConfig::boxid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxID)
  return _internal_boxid();
}
inline void BuyBoxConfig::_internal_set_boxid(int32_t value) {
  
  boxid_ = value;
}
inline void BuyBoxConfig::set_boxid(int32_t value) {
  _internal_set_boxid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxID)
}

// int32 ActivitySubID = 3;
inline void BuyBoxConfig::clear_activitysubid() {
  activitysubid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_activitysubid() const {
  return activitysubid_;
}
inline int32_t BuyBoxConfig::activitysubid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.ActivitySubID)
  return _internal_activitysubid();
}
inline void BuyBoxConfig::_internal_set_activitysubid(int32_t value) {
  
  activitysubid_ = value;
}
inline void BuyBoxConfig::set_activitysubid(int32_t value) {
  _internal_set_activitysubid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.ActivitySubID)
}

// int32 SortID = 4;
inline void BuyBoxConfig::clear_sortid() {
  sortid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_sortid() const {
  return sortid_;
}
inline int32_t BuyBoxConfig::sortid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.SortID)
  return _internal_sortid();
}
inline void BuyBoxConfig::_internal_set_sortid(int32_t value) {
  
  sortid_ = value;
}
inline void BuyBoxConfig::set_sortid(int32_t value) {
  _internal_set_sortid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.SortID)
}

// int32 UnlockLv = 5;
inline void BuyBoxConfig::clear_unlocklv() {
  unlocklv_ = 0;
}
inline int32_t BuyBoxConfig::_internal_unlocklv() const {
  return unlocklv_;
}
inline int32_t BuyBoxConfig::unlocklv() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.UnlockLv)
  return _internal_unlocklv();
}
inline void BuyBoxConfig::_internal_set_unlocklv(int32_t value) {
  
  unlocklv_ = value;
}
inline void BuyBoxConfig::set_unlocklv(int32_t value) {
  _internal_set_unlocklv(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.UnlockLv)
}

// string BoxName = 6;
inline void BuyBoxConfig::clear_boxname() {
  boxname_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxname() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxName)
  return _internal_boxname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxname(ArgT0&& arg0, ArgT... args) {
 
 boxname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxName)
}
inline std::string* BuyBoxConfig::mutable_boxname() {
  std::string* _s = _internal_mutable_boxname();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxName)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxname() const {
  return boxname_.Get();
}
inline void BuyBoxConfig::_internal_set_boxname(const std::string& value) {
  
  boxname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxname() {
  
  return boxname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxname() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxName)
  return boxname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxname(std::string* boxname) {
  if (boxname != nullptr) {
    
  } else {
    
  }
  boxname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxname,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxname_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxName)
}

// string BoxNameColorTop = 7;
inline void BuyBoxConfig::clear_boxnamecolortop() {
  boxnamecolortop_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxnamecolortop() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxNameColorTop)
  return _internal_boxnamecolortop();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxnamecolortop(ArgT0&& arg0, ArgT... args) {
 
 boxnamecolortop_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxNameColorTop)
}
inline std::string* BuyBoxConfig::mutable_boxnamecolortop() {
  std::string* _s = _internal_mutable_boxnamecolortop();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxNameColorTop)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxnamecolortop() const {
  return boxnamecolortop_.Get();
}
inline void BuyBoxConfig::_internal_set_boxnamecolortop(const std::string& value) {
  
  boxnamecolortop_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxnamecolortop() {
  
  return boxnamecolortop_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxnamecolortop() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxNameColorTop)
  return boxnamecolortop_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxnamecolortop(std::string* boxnamecolortop) {
  if (boxnamecolortop != nullptr) {
    
  } else {
    
  }
  boxnamecolortop_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxnamecolortop,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxnamecolortop_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxnamecolortop_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxNameColorTop)
}

// string BoxNameColorDown = 8;
inline void BuyBoxConfig::clear_boxnamecolordown() {
  boxnamecolordown_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxnamecolordown() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxNameColorDown)
  return _internal_boxnamecolordown();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxnamecolordown(ArgT0&& arg0, ArgT... args) {
 
 boxnamecolordown_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxNameColorDown)
}
inline std::string* BuyBoxConfig::mutable_boxnamecolordown() {
  std::string* _s = _internal_mutable_boxnamecolordown();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxNameColorDown)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxnamecolordown() const {
  return boxnamecolordown_.Get();
}
inline void BuyBoxConfig::_internal_set_boxnamecolordown(const std::string& value) {
  
  boxnamecolordown_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxnamecolordown() {
  
  return boxnamecolordown_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxnamecolordown() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxNameColorDown)
  return boxnamecolordown_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxnamecolordown(std::string* boxnamecolordown) {
  if (boxnamecolordown != nullptr) {
    
  } else {
    
  }
  boxnamecolordown_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxnamecolordown,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxnamecolordown_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxnamecolordown_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxNameColorDown)
}

// string BoxNameOutlineColor = 9;
inline void BuyBoxConfig::clear_boxnameoutlinecolor() {
  boxnameoutlinecolor_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxnameoutlinecolor() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxNameOutlineColor)
  return _internal_boxnameoutlinecolor();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxnameoutlinecolor(ArgT0&& arg0, ArgT... args) {
 
 boxnameoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxNameOutlineColor)
}
inline std::string* BuyBoxConfig::mutable_boxnameoutlinecolor() {
  std::string* _s = _internal_mutable_boxnameoutlinecolor();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxNameOutlineColor)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxnameoutlinecolor() const {
  return boxnameoutlinecolor_.Get();
}
inline void BuyBoxConfig::_internal_set_boxnameoutlinecolor(const std::string& value) {
  
  boxnameoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxnameoutlinecolor() {
  
  return boxnameoutlinecolor_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxnameoutlinecolor() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxNameOutlineColor)
  return boxnameoutlinecolor_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxnameoutlinecolor(std::string* boxnameoutlinecolor) {
  if (boxnameoutlinecolor != nullptr) {
    
  } else {
    
  }
  boxnameoutlinecolor_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxnameoutlinecolor,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxnameoutlinecolor_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxnameoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxNameOutlineColor)
}

// string BoxDesc = 10;
inline void BuyBoxConfig::clear_boxdesc() {
  boxdesc_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxdesc() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxDesc)
  return _internal_boxdesc();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxdesc(ArgT0&& arg0, ArgT... args) {
 
 boxdesc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxDesc)
}
inline std::string* BuyBoxConfig::mutable_boxdesc() {
  std::string* _s = _internal_mutable_boxdesc();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxDesc)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxdesc() const {
  return boxdesc_.Get();
}
inline void BuyBoxConfig::_internal_set_boxdesc(const std::string& value) {
  
  boxdesc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxdesc() {
  
  return boxdesc_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxdesc() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxDesc)
  return boxdesc_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxdesc(std::string* boxdesc) {
  if (boxdesc != nullptr) {
    
  } else {
    
  }
  boxdesc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxdesc,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxdesc_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxdesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxDesc)
}

// string BoxDescColor = 11;
inline void BuyBoxConfig::clear_boxdesccolor() {
  boxdesccolor_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxdesccolor() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxDescColor)
  return _internal_boxdesccolor();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxdesccolor(ArgT0&& arg0, ArgT... args) {
 
 boxdesccolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxDescColor)
}
inline std::string* BuyBoxConfig::mutable_boxdesccolor() {
  std::string* _s = _internal_mutable_boxdesccolor();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxDescColor)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxdesccolor() const {
  return boxdesccolor_.Get();
}
inline void BuyBoxConfig::_internal_set_boxdesccolor(const std::string& value) {
  
  boxdesccolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxdesccolor() {
  
  return boxdesccolor_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxdesccolor() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxDescColor)
  return boxdesccolor_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxdesccolor(std::string* boxdesccolor) {
  if (boxdesccolor != nullptr) {
    
  } else {
    
  }
  boxdesccolor_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxdesccolor,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxdesccolor_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxdesccolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxDescColor)
}

// string BoxDescOutlineColor = 12;
inline void BuyBoxConfig::clear_boxdescoutlinecolor() {
  boxdescoutlinecolor_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxdescoutlinecolor() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxDescOutlineColor)
  return _internal_boxdescoutlinecolor();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxdescoutlinecolor(ArgT0&& arg0, ArgT... args) {
 
 boxdescoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxDescOutlineColor)
}
inline std::string* BuyBoxConfig::mutable_boxdescoutlinecolor() {
  std::string* _s = _internal_mutable_boxdescoutlinecolor();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxDescOutlineColor)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxdescoutlinecolor() const {
  return boxdescoutlinecolor_.Get();
}
inline void BuyBoxConfig::_internal_set_boxdescoutlinecolor(const std::string& value) {
  
  boxdescoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxdescoutlinecolor() {
  
  return boxdescoutlinecolor_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxdescoutlinecolor() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxDescOutlineColor)
  return boxdescoutlinecolor_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxdescoutlinecolor(std::string* boxdescoutlinecolor) {
  if (boxdescoutlinecolor != nullptr) {
    
  } else {
    
  }
  boxdescoutlinecolor_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxdescoutlinecolor,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxdescoutlinecolor_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxdescoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxDescOutlineColor)
}

// string BoxIcon = 13;
inline void BuyBoxConfig::clear_boxicon() {
  boxicon_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxicon() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxIcon)
  return _internal_boxicon();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxicon(ArgT0&& arg0, ArgT... args) {
 
 boxicon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxIcon)
}
inline std::string* BuyBoxConfig::mutable_boxicon() {
  std::string* _s = _internal_mutable_boxicon();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxIcon)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxicon() const {
  return boxicon_.Get();
}
inline void BuyBoxConfig::_internal_set_boxicon(const std::string& value) {
  
  boxicon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxicon() {
  
  return boxicon_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxicon() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxIcon)
  return boxicon_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxicon(std::string* boxicon) {
  if (boxicon != nullptr) {
    
  } else {
    
  }
  boxicon_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxicon,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxicon_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxicon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxIcon)
}

// int32 BoxPortrait = 14;
inline void BuyBoxConfig::clear_boxportrait() {
  boxportrait_ = 0;
}
inline int32_t BuyBoxConfig::_internal_boxportrait() const {
  return boxportrait_;
}
inline int32_t BuyBoxConfig::boxportrait() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxPortrait)
  return _internal_boxportrait();
}
inline void BuyBoxConfig::_internal_set_boxportrait(int32_t value) {
  
  boxportrait_ = value;
}
inline void BuyBoxConfig::set_boxportrait(int32_t value) {
  _internal_set_boxportrait(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxPortrait)
}

// string BoxBg = 15;
inline void BuyBoxConfig::clear_boxbg() {
  boxbg_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::boxbg() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BoxBg)
  return _internal_boxbg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_boxbg(ArgT0&& arg0, ArgT... args) {
 
 boxbg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BoxBg)
}
inline std::string* BuyBoxConfig::mutable_boxbg() {
  std::string* _s = _internal_mutable_boxbg();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.BoxBg)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_boxbg() const {
  return boxbg_.Get();
}
inline void BuyBoxConfig::_internal_set_boxbg(const std::string& value) {
  
  boxbg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_boxbg() {
  
  return boxbg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_boxbg() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.BoxBg)
  return boxbg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_boxbg(std::string* boxbg) {
  if (boxbg != nullptr) {
    
  } else {
    
  }
  boxbg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boxbg,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (boxbg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    boxbg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.BoxBg)
}

// string EntranceIcon = 16;
inline void BuyBoxConfig::clear_entranceicon() {
  entranceicon_.ClearToEmpty();
}
inline const std::string& BuyBoxConfig::entranceicon() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.EntranceIcon)
  return _internal_entranceicon();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BuyBoxConfig::set_entranceicon(ArgT0&& arg0, ArgT... args) {
 
 entranceicon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.EntranceIcon)
}
inline std::string* BuyBoxConfig::mutable_entranceicon() {
  std::string* _s = _internal_mutable_entranceicon();
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfig.EntranceIcon)
  return _s;
}
inline const std::string& BuyBoxConfig::_internal_entranceicon() const {
  return entranceicon_.Get();
}
inline void BuyBoxConfig::_internal_set_entranceicon(const std::string& value) {
  
  entranceicon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::_internal_mutable_entranceicon() {
  
  return entranceicon_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BuyBoxConfig::release_entranceicon() {
  // @@protoc_insertion_point(field_release:resource.BuyBoxConfig.EntranceIcon)
  return entranceicon_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BuyBoxConfig::set_allocated_entranceicon(std::string* entranceicon) {
  if (entranceicon != nullptr) {
    
  } else {
    
  }
  entranceicon_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), entranceicon,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (entranceicon_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    entranceicon_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.BuyBoxConfig.EntranceIcon)
}

// int32 DrawCardPanelType = 17;
inline void BuyBoxConfig::clear_drawcardpaneltype() {
  drawcardpaneltype_ = 0;
}
inline int32_t BuyBoxConfig::_internal_drawcardpaneltype() const {
  return drawcardpaneltype_;
}
inline int32_t BuyBoxConfig::drawcardpaneltype() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.DrawCardPanelType)
  return _internal_drawcardpaneltype();
}
inline void BuyBoxConfig::_internal_set_drawcardpaneltype(int32_t value) {
  
  drawcardpaneltype_ = value;
}
inline void BuyBoxConfig::set_drawcardpaneltype(int32_t value) {
  _internal_set_drawcardpaneltype(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.DrawCardPanelType)
}

// int32 CostItemID = 18;
inline void BuyBoxConfig::clear_costitemid() {
  costitemid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_costitemid() const {
  return costitemid_;
}
inline int32_t BuyBoxConfig::costitemid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.CostItemID)
  return _internal_costitemid();
}
inline void BuyBoxConfig::_internal_set_costitemid(int32_t value) {
  
  costitemid_ = value;
}
inline void BuyBoxConfig::set_costitemid(int32_t value) {
  _internal_set_costitemid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.CostItemID)
}

// int32 CostItemCnt = 19;
inline void BuyBoxConfig::clear_costitemcnt() {
  costitemcnt_ = 0;
}
inline int32_t BuyBoxConfig::_internal_costitemcnt() const {
  return costitemcnt_;
}
inline int32_t BuyBoxConfig::costitemcnt() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.CostItemCnt)
  return _internal_costitemcnt();
}
inline void BuyBoxConfig::_internal_set_costitemcnt(int32_t value) {
  
  costitemcnt_ = value;
}
inline void BuyBoxConfig::set_costitemcnt(int32_t value) {
  _internal_set_costitemcnt(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.CostItemCnt)
}

// int32 CostMoneyType = 20;
inline void BuyBoxConfig::clear_costmoneytype() {
  costmoneytype_ = 0;
}
inline int32_t BuyBoxConfig::_internal_costmoneytype() const {
  return costmoneytype_;
}
inline int32_t BuyBoxConfig::costmoneytype() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.CostMoneyType)
  return _internal_costmoneytype();
}
inline void BuyBoxConfig::_internal_set_costmoneytype(int32_t value) {
  
  costmoneytype_ = value;
}
inline void BuyBoxConfig::set_costmoneytype(int32_t value) {
  _internal_set_costmoneytype(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.CostMoneyType)
}

// int32 CostMoneyCnt = 21;
inline void BuyBoxConfig::clear_costmoneycnt() {
  costmoneycnt_ = 0;
}
inline int32_t BuyBoxConfig::_internal_costmoneycnt() const {
  return costmoneycnt_;
}
inline int32_t BuyBoxConfig::costmoneycnt() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.CostMoneyCnt)
  return _internal_costmoneycnt();
}
inline void BuyBoxConfig::_internal_set_costmoneycnt(int32_t value) {
  
  costmoneycnt_ = value;
}
inline void BuyBoxConfig::set_costmoneycnt(int32_t value) {
  _internal_set_costmoneycnt(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.CostMoneyCnt)
}

// int32 FreeRefreshint32erval = 22;
inline void BuyBoxConfig::clear_freerefreshint32erval() {
  freerefreshint32erval_ = 0;
}
inline int32_t BuyBoxConfig::_internal_freerefreshint32erval() const {
  return freerefreshint32erval_;
}
inline int32_t BuyBoxConfig::freerefreshint32erval() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.FreeRefreshint32erval)
  return _internal_freerefreshint32erval();
}
inline void BuyBoxConfig::_internal_set_freerefreshint32erval(int32_t value) {
  
  freerefreshint32erval_ = value;
}
inline void BuyBoxConfig::set_freerefreshint32erval(int32_t value) {
  _internal_set_freerefreshint32erval(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.FreeRefreshint32erval)
}

// int32 FirstBooty = 23;
inline void BuyBoxConfig::clear_firstbooty() {
  firstbooty_ = 0;
}
inline int32_t BuyBoxConfig::_internal_firstbooty() const {
  return firstbooty_;
}
inline int32_t BuyBoxConfig::firstbooty() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.FirstBooty)
  return _internal_firstbooty();
}
inline void BuyBoxConfig::_internal_set_firstbooty(int32_t value) {
  
  firstbooty_ = value;
}
inline void BuyBoxConfig::set_firstbooty(int32_t value) {
  _internal_set_firstbooty(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.FirstBooty)
}

// int32 CostBootyID = 24;
inline void BuyBoxConfig::clear_costbootyid() {
  costbootyid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_costbootyid() const {
  return costbootyid_;
}
inline int32_t BuyBoxConfig::costbootyid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.CostBootyID)
  return _internal_costbootyid();
}
inline void BuyBoxConfig::_internal_set_costbootyid(int32_t value) {
  
  costbootyid_ = value;
}
inline void BuyBoxConfig::set_costbootyid(int32_t value) {
  _internal_set_costbootyid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.CostBootyID)
}

// int32 TenCostItemID = 25;
inline void BuyBoxConfig::clear_tencostitemid() {
  tencostitemid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_tencostitemid() const {
  return tencostitemid_;
}
inline int32_t BuyBoxConfig::tencostitemid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.TenCostItemID)
  return _internal_tencostitemid();
}
inline void BuyBoxConfig::_internal_set_tencostitemid(int32_t value) {
  
  tencostitemid_ = value;
}
inline void BuyBoxConfig::set_tencostitemid(int32_t value) {
  _internal_set_tencostitemid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.TenCostItemID)
}

// int32 TenCostItemCnt = 26;
inline void BuyBoxConfig::clear_tencostitemcnt() {
  tencostitemcnt_ = 0;
}
inline int32_t BuyBoxConfig::_internal_tencostitemcnt() const {
  return tencostitemcnt_;
}
inline int32_t BuyBoxConfig::tencostitemcnt() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.TenCostItemCnt)
  return _internal_tencostitemcnt();
}
inline void BuyBoxConfig::_internal_set_tencostitemcnt(int32_t value) {
  
  tencostitemcnt_ = value;
}
inline void BuyBoxConfig::set_tencostitemcnt(int32_t value) {
  _internal_set_tencostitemcnt(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.TenCostItemCnt)
}

// int32 TenCostMoneyType = 27;
inline void BuyBoxConfig::clear_tencostmoneytype() {
  tencostmoneytype_ = 0;
}
inline int32_t BuyBoxConfig::_internal_tencostmoneytype() const {
  return tencostmoneytype_;
}
inline int32_t BuyBoxConfig::tencostmoneytype() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.TenCostMoneyType)
  return _internal_tencostmoneytype();
}
inline void BuyBoxConfig::_internal_set_tencostmoneytype(int32_t value) {
  
  tencostmoneytype_ = value;
}
inline void BuyBoxConfig::set_tencostmoneytype(int32_t value) {
  _internal_set_tencostmoneytype(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.TenCostMoneyType)
}

// int32 TenCostMoneyCnt = 28;
inline void BuyBoxConfig::clear_tencostmoneycnt() {
  tencostmoneycnt_ = 0;
}
inline int32_t BuyBoxConfig::_internal_tencostmoneycnt() const {
  return tencostmoneycnt_;
}
inline int32_t BuyBoxConfig::tencostmoneycnt() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.TenCostMoneyCnt)
  return _internal_tencostmoneycnt();
}
inline void BuyBoxConfig::_internal_set_tencostmoneycnt(int32_t value) {
  
  tencostmoneycnt_ = value;
}
inline void BuyBoxConfig::set_tencostmoneycnt(int32_t value) {
  _internal_set_tencostmoneycnt(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.TenCostMoneyCnt)
}

// int32 TenCostBootyID = 29;
inline void BuyBoxConfig::clear_tencostbootyid() {
  tencostbootyid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_tencostbootyid() const {
  return tencostbootyid_;
}
inline int32_t BuyBoxConfig::tencostbootyid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.TenCostBootyID)
  return _internal_tencostbootyid();
}
inline void BuyBoxConfig::_internal_set_tencostbootyid(int32_t value) {
  
  tencostbootyid_ = value;
}
inline void BuyBoxConfig::set_tencostbootyid(int32_t value) {
  _internal_set_tencostbootyid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.TenCostBootyID)
}

// float TenDiscount = 30;
inline void BuyBoxConfig::clear_tendiscount() {
  tendiscount_ = 0;
}
inline float BuyBoxConfig::_internal_tendiscount() const {
  return tendiscount_;
}
inline float BuyBoxConfig::tendiscount() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.TenDiscount)
  return _internal_tendiscount();
}
inline void BuyBoxConfig::_internal_set_tendiscount(float value) {
  
  tendiscount_ = value;
}
inline void BuyBoxConfig::set_tendiscount(float value) {
  _internal_set_tendiscount(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.TenDiscount)
}

// int32 Replenish = 31;
inline void BuyBoxConfig::clear_replenish() {
  replenish_ = 0;
}
inline int32_t BuyBoxConfig::_internal_replenish() const {
  return replenish_;
}
inline int32_t BuyBoxConfig::replenish() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.Replenish)
  return _internal_replenish();
}
inline void BuyBoxConfig::_internal_set_replenish(int32_t value) {
  
  replenish_ = value;
}
inline void BuyBoxConfig::set_replenish(int32_t value) {
  _internal_set_replenish(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.Replenish)
}

// int32 EnsureShowBootyID = 32;
inline void BuyBoxConfig::clear_ensureshowbootyid() {
  ensureshowbootyid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_ensureshowbootyid() const {
  return ensureshowbootyid_;
}
inline int32_t BuyBoxConfig::ensureshowbootyid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.EnsureShowBootyID)
  return _internal_ensureshowbootyid();
}
inline void BuyBoxConfig::_internal_set_ensureshowbootyid(int32_t value) {
  
  ensureshowbootyid_ = value;
}
inline void BuyBoxConfig::set_ensureshowbootyid(int32_t value) {
  _internal_set_ensureshowbootyid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.EnsureShowBootyID)
}

// int32 UnLockWishHeroCnt = 33;
inline void BuyBoxConfig::clear_unlockwishherocnt() {
  unlockwishherocnt_ = 0;
}
inline int32_t BuyBoxConfig::_internal_unlockwishherocnt() const {
  return unlockwishherocnt_;
}
inline int32_t BuyBoxConfig::unlockwishherocnt() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.UnLockWishHeroCnt)
  return _internal_unlockwishherocnt();
}
inline void BuyBoxConfig::_internal_set_unlockwishherocnt(int32_t value) {
  
  unlockwishherocnt_ = value;
}
inline void BuyBoxConfig::set_unlockwishherocnt(int32_t value) {
  _internal_set_unlockwishherocnt(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.UnLockWishHeroCnt)
}

// int32 UnLockWishBlessHeroCnt = 34;
inline void BuyBoxConfig::clear_unlockwishblessherocnt() {
  unlockwishblessherocnt_ = 0;
}
inline int32_t BuyBoxConfig::_internal_unlockwishblessherocnt() const {
  return unlockwishblessherocnt_;
}
inline int32_t BuyBoxConfig::unlockwishblessherocnt() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.UnLockWishBlessHeroCnt)
  return _internal_unlockwishblessherocnt();
}
inline void BuyBoxConfig::_internal_set_unlockwishblessherocnt(int32_t value) {
  
  unlockwishblessherocnt_ = value;
}
inline void BuyBoxConfig::set_unlockwishblessherocnt(int32_t value) {
  _internal_set_unlockwishblessherocnt(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.UnLockWishBlessHeroCnt)
}

// int32 BlessingCnt = 35;
inline void BuyBoxConfig::clear_blessingcnt() {
  blessingcnt_ = 0;
}
inline int32_t BuyBoxConfig::_internal_blessingcnt() const {
  return blessingcnt_;
}
inline int32_t BuyBoxConfig::blessingcnt() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.BlessingCnt)
  return _internal_blessingcnt();
}
inline void BuyBoxConfig::_internal_set_blessingcnt(int32_t value) {
  
  blessingcnt_ = value;
}
inline void BuyBoxConfig::set_blessingcnt(int32_t value) {
  _internal_set_blessingcnt(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.BlessingCnt)
}

// int32 RuleTextID = 36;
inline void BuyBoxConfig::clear_ruletextid() {
  ruletextid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_ruletextid() const {
  return ruletextid_;
}
inline int32_t BuyBoxConfig::ruletextid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.RuleTextID)
  return _internal_ruletextid();
}
inline void BuyBoxConfig::_internal_set_ruletextid(int32_t value) {
  
  ruletextid_ = value;
}
inline void BuyBoxConfig::set_ruletextid(int32_t value) {
  _internal_set_ruletextid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.RuleTextID)
}

// int32 CardPoolID = 37;
inline void BuyBoxConfig::clear_cardpoolid() {
  cardpoolid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_cardpoolid() const {
  return cardpoolid_;
}
inline int32_t BuyBoxConfig::cardpoolid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.CardPoolID)
  return _internal_cardpoolid();
}
inline void BuyBoxConfig::_internal_set_cardpoolid(int32_t value) {
  
  cardpoolid_ = value;
}
inline void BuyBoxConfig::set_cardpoolid(int32_t value) {
  _internal_set_cardpoolid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.CardPoolID)
}

// int32 WishPoolID = 38;
inline void BuyBoxConfig::clear_wishpoolid() {
  wishpoolid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_wishpoolid() const {
  return wishpoolid_;
}
inline int32_t BuyBoxConfig::wishpoolid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.WishPoolID)
  return _internal_wishpoolid();
}
inline void BuyBoxConfig::_internal_set_wishpoolid(int32_t value) {
  
  wishpoolid_ = value;
}
inline void BuyBoxConfig::set_wishpoolid(int32_t value) {
  _internal_set_wishpoolid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.WishPoolID)
}

// int32 UPPoolID = 39;
inline void BuyBoxConfig::clear_uppoolid() {
  uppoolid_ = 0;
}
inline int32_t BuyBoxConfig::_internal_uppoolid() const {
  return uppoolid_;
}
inline int32_t BuyBoxConfig::uppoolid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfig.UPPoolID)
  return _internal_uppoolid();
}
inline void BuyBoxConfig::_internal_set_uppoolid(int32_t value) {
  
  uppoolid_ = value;
}
inline void BuyBoxConfig::set_uppoolid(int32_t value) {
  _internal_set_uppoolid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxConfig.UPPoolID)
}

// -------------------------------------------------------------------

// BuyBoxConfigList

// repeated .resource.BuyBoxConfig data = 1;
inline int BuyBoxConfigList::_internal_data_size() const {
  return data_.size();
}
inline int BuyBoxConfigList::data_size() const {
  return _internal_data_size();
}
inline void BuyBoxConfigList::clear_data() {
  data_.Clear();
}
inline ::resource::BuyBoxConfig* BuyBoxConfigList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxConfigList.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxConfig >*
BuyBoxConfigList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:resource.BuyBoxConfigList.data)
  return &data_;
}
inline const ::resource::BuyBoxConfig& BuyBoxConfigList::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::resource::BuyBoxConfig& BuyBoxConfigList::data(int index) const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxConfigList.data)
  return _internal_data(index);
}
inline ::resource::BuyBoxConfig* BuyBoxConfigList::_internal_add_data() {
  return data_.Add();
}
inline ::resource::BuyBoxConfig* BuyBoxConfigList::add_data() {
  ::resource::BuyBoxConfig* _add = _internal_add_data();
  // @@protoc_insertion_point(field_add:resource.BuyBoxConfigList.data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxConfig >&
BuyBoxConfigList::data() const {
  // @@protoc_insertion_point(field_list:resource.BuyBoxConfigList.data)
  return data_;
}

// -------------------------------------------------------------------

// BuyBoxChanceConfig

// int32 CardPoolID = 1;
inline void BuyBoxChanceConfig::clear_cardpoolid() {
  cardpoolid_ = 0;
}
inline int32_t BuyBoxChanceConfig::_internal_cardpoolid() const {
  return cardpoolid_;
}
inline int32_t BuyBoxChanceConfig::cardpoolid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxChanceConfig.CardPoolID)
  return _internal_cardpoolid();
}
inline void BuyBoxChanceConfig::_internal_set_cardpoolid(int32_t value) {
  
  cardpoolid_ = value;
}
inline void BuyBoxChanceConfig::set_cardpoolid(int32_t value) {
  _internal_set_cardpoolid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxChanceConfig.CardPoolID)
}

// int32 HeroStar = 2;
inline void BuyBoxChanceConfig::clear_herostar() {
  herostar_ = 0;
}
inline int32_t BuyBoxChanceConfig::_internal_herostar() const {
  return herostar_;
}
inline int32_t BuyBoxChanceConfig::herostar() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxChanceConfig.HeroStar)
  return _internal_herostar();
}
inline void BuyBoxChanceConfig::_internal_set_herostar(int32_t value) {
  
  herostar_ = value;
}
inline void BuyBoxChanceConfig::set_herostar(int32_t value) {
  _internal_set_herostar(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxChanceConfig.HeroStar)
}

// int32 HeroID = 3;
inline void BuyBoxChanceConfig::clear_heroid() {
  heroid_ = 0;
}
inline int32_t BuyBoxChanceConfig::_internal_heroid() const {
  return heroid_;
}
inline int32_t BuyBoxChanceConfig::heroid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxChanceConfig.HeroID)
  return _internal_heroid();
}
inline void BuyBoxChanceConfig::_internal_set_heroid(int32_t value) {
  
  heroid_ = value;
}
inline void BuyBoxChanceConfig::set_heroid(int32_t value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxChanceConfig.HeroID)
}

// float Chance = 4;
inline void BuyBoxChanceConfig::clear_chance() {
  chance_ = 0;
}
inline float BuyBoxChanceConfig::_internal_chance() const {
  return chance_;
}
inline float BuyBoxChanceConfig::chance() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxChanceConfig.Chance)
  return _internal_chance();
}
inline void BuyBoxChanceConfig::_internal_set_chance(float value) {
  
  chance_ = value;
}
inline void BuyBoxChanceConfig::set_chance(float value) {
  _internal_set_chance(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxChanceConfig.Chance)
}

// -------------------------------------------------------------------

// BuyBoxChanceConfigList

// repeated .resource.BuyBoxChanceConfig data = 1;
inline int BuyBoxChanceConfigList::_internal_data_size() const {
  return data_.size();
}
inline int BuyBoxChanceConfigList::data_size() const {
  return _internal_data_size();
}
inline void BuyBoxChanceConfigList::clear_data() {
  data_.Clear();
}
inline ::resource::BuyBoxChanceConfig* BuyBoxChanceConfigList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxChanceConfigList.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxChanceConfig >*
BuyBoxChanceConfigList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:resource.BuyBoxChanceConfigList.data)
  return &data_;
}
inline const ::resource::BuyBoxChanceConfig& BuyBoxChanceConfigList::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::resource::BuyBoxChanceConfig& BuyBoxChanceConfigList::data(int index) const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxChanceConfigList.data)
  return _internal_data(index);
}
inline ::resource::BuyBoxChanceConfig* BuyBoxChanceConfigList::_internal_add_data() {
  return data_.Add();
}
inline ::resource::BuyBoxChanceConfig* BuyBoxChanceConfigList::add_data() {
  ::resource::BuyBoxChanceConfig* _add = _internal_add_data();
  // @@protoc_insertion_point(field_add:resource.BuyBoxChanceConfigList.data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxChanceConfig >&
BuyBoxChanceConfigList::data() const {
  // @@protoc_insertion_point(field_list:resource.BuyBoxChanceConfigList.data)
  return data_;
}

// -------------------------------------------------------------------

// BuyBoxWishConfig

// int32 WishPoolID = 1;
inline void BuyBoxWishConfig::clear_wishpoolid() {
  wishpoolid_ = 0;
}
inline int32_t BuyBoxWishConfig::_internal_wishpoolid() const {
  return wishpoolid_;
}
inline int32_t BuyBoxWishConfig::wishpoolid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxWishConfig.WishPoolID)
  return _internal_wishpoolid();
}
inline void BuyBoxWishConfig::_internal_set_wishpoolid(int32_t value) {
  
  wishpoolid_ = value;
}
inline void BuyBoxWishConfig::set_wishpoolid(int32_t value) {
  _internal_set_wishpoolid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxWishConfig.WishPoolID)
}

// int32 HeroID = 2;
inline void BuyBoxWishConfig::clear_heroid() {
  heroid_ = 0;
}
inline int32_t BuyBoxWishConfig::_internal_heroid() const {
  return heroid_;
}
inline int32_t BuyBoxWishConfig::heroid() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxWishConfig.HeroID)
  return _internal_heroid();
}
inline void BuyBoxWishConfig::_internal_set_heroid(int32_t value) {
  
  heroid_ = value;
}
inline void BuyBoxWishConfig::set_heroid(int32_t value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxWishConfig.HeroID)
}

// int32 CoreFlag = 3;
inline void BuyBoxWishConfig::clear_coreflag() {
  coreflag_ = 0;
}
inline int32_t BuyBoxWishConfig::_internal_coreflag() const {
  return coreflag_;
}
inline int32_t BuyBoxWishConfig::coreflag() const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxWishConfig.CoreFlag)
  return _internal_coreflag();
}
inline void BuyBoxWishConfig::_internal_set_coreflag(int32_t value) {
  
  coreflag_ = value;
}
inline void BuyBoxWishConfig::set_coreflag(int32_t value) {
  _internal_set_coreflag(value);
  // @@protoc_insertion_point(field_set:resource.BuyBoxWishConfig.CoreFlag)
}

// -------------------------------------------------------------------

// BuyBoxWishConfigList

// repeated .resource.BuyBoxWishConfig data = 1;
inline int BuyBoxWishConfigList::_internal_data_size() const {
  return data_.size();
}
inline int BuyBoxWishConfigList::data_size() const {
  return _internal_data_size();
}
inline void BuyBoxWishConfigList::clear_data() {
  data_.Clear();
}
inline ::resource::BuyBoxWishConfig* BuyBoxWishConfigList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:resource.BuyBoxWishConfigList.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxWishConfig >*
BuyBoxWishConfigList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:resource.BuyBoxWishConfigList.data)
  return &data_;
}
inline const ::resource::BuyBoxWishConfig& BuyBoxWishConfigList::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::resource::BuyBoxWishConfig& BuyBoxWishConfigList::data(int index) const {
  // @@protoc_insertion_point(field_get:resource.BuyBoxWishConfigList.data)
  return _internal_data(index);
}
inline ::resource::BuyBoxWishConfig* BuyBoxWishConfigList::_internal_add_data() {
  return data_.Add();
}
inline ::resource::BuyBoxWishConfig* BuyBoxWishConfigList::add_data() {
  ::resource::BuyBoxWishConfig* _add = _internal_add_data();
  // @@protoc_insertion_point(field_add:resource.BuyBoxWishConfigList.data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::BuyBoxWishConfig >&
BuyBoxWishConfigList::data() const {
  // @@protoc_insertion_point(field_list:resource.BuyBoxWishConfigList.data)
  return data_;
}

// -------------------------------------------------------------------

// UpBoxConfig

// int32 UPPoolID = 1;
inline void UpBoxConfig::clear_uppoolid() {
  uppoolid_ = 0;
}
inline int32_t UpBoxConfig::_internal_uppoolid() const {
  return uppoolid_;
}
inline int32_t UpBoxConfig::uppoolid() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.UPPoolID)
  return _internal_uppoolid();
}
inline void UpBoxConfig::_internal_set_uppoolid(int32_t value) {
  
  uppoolid_ = value;
}
inline void UpBoxConfig::set_uppoolid(int32_t value) {
  _internal_set_uppoolid(value);
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.UPPoolID)
}

// int32 HeroID = 2;
inline void UpBoxConfig::clear_heroid() {
  heroid_ = 0;
}
inline int32_t UpBoxConfig::_internal_heroid() const {
  return heroid_;
}
inline int32_t UpBoxConfig::heroid() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.HeroID)
  return _internal_heroid();
}
inline void UpBoxConfig::_internal_set_heroid(int32_t value) {
  
  heroid_ = value;
}
inline void UpBoxConfig::set_heroid(int32_t value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.HeroID)
}

// string HeroBg = 3;
inline void UpBoxConfig::clear_herobg() {
  herobg_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::herobg() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.HeroBg)
  return _internal_herobg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_herobg(ArgT0&& arg0, ArgT... args) {
 
 herobg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.HeroBg)
}
inline std::string* UpBoxConfig::mutable_herobg() {
  std::string* _s = _internal_mutable_herobg();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.HeroBg)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_herobg() const {
  return herobg_.Get();
}
inline void UpBoxConfig::_internal_set_herobg(const std::string& value) {
  
  herobg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_herobg() {
  
  return herobg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_herobg() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.HeroBg)
  return herobg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_herobg(std::string* herobg) {
  if (herobg != nullptr) {
    
  } else {
    
  }
  herobg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herobg,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (herobg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    herobg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.HeroBg)
}

// int32 HeroModel = 4;
inline void UpBoxConfig::clear_heromodel() {
  heromodel_ = 0;
}
inline int32_t UpBoxConfig::_internal_heromodel() const {
  return heromodel_;
}
inline int32_t UpBoxConfig::heromodel() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.HeroModel)
  return _internal_heromodel();
}
inline void UpBoxConfig::_internal_set_heromodel(int32_t value) {
  
  heromodel_ = value;
}
inline void UpBoxConfig::set_heromodel(int32_t value) {
  _internal_set_heromodel(value);
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.HeroModel)
}

// string HeroNameBg = 5;
inline void UpBoxConfig::clear_heronamebg() {
  heronamebg_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::heronamebg() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.HeroNameBg)
  return _internal_heronamebg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_heronamebg(ArgT0&& arg0, ArgT... args) {
 
 heronamebg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.HeroNameBg)
}
inline std::string* UpBoxConfig::mutable_heronamebg() {
  std::string* _s = _internal_mutable_heronamebg();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.HeroNameBg)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_heronamebg() const {
  return heronamebg_.Get();
}
inline void UpBoxConfig::_internal_set_heronamebg(const std::string& value) {
  
  heronamebg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_heronamebg() {
  
  return heronamebg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_heronamebg() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.HeroNameBg)
  return heronamebg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_heronamebg(std::string* heronamebg) {
  if (heronamebg != nullptr) {
    
  } else {
    
  }
  heronamebg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heronamebg,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (heronamebg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    heronamebg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.HeroNameBg)
}

// string DescText = 6;
inline void UpBoxConfig::clear_desctext() {
  desctext_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::desctext() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.DescText)
  return _internal_desctext();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_desctext(ArgT0&& arg0, ArgT... args) {
 
 desctext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.DescText)
}
inline std::string* UpBoxConfig::mutable_desctext() {
  std::string* _s = _internal_mutable_desctext();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.DescText)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_desctext() const {
  return desctext_.Get();
}
inline void UpBoxConfig::_internal_set_desctext(const std::string& value) {
  
  desctext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_desctext() {
  
  return desctext_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_desctext() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.DescText)
  return desctext_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_desctext(std::string* desctext) {
  if (desctext != nullptr) {
    
  } else {
    
  }
  desctext_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), desctext,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (desctext_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    desctext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.DescText)
}

// string DescTextColor = 7;
inline void UpBoxConfig::clear_desctextcolor() {
  desctextcolor_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::desctextcolor() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.DescTextColor)
  return _internal_desctextcolor();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_desctextcolor(ArgT0&& arg0, ArgT... args) {
 
 desctextcolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.DescTextColor)
}
inline std::string* UpBoxConfig::mutable_desctextcolor() {
  std::string* _s = _internal_mutable_desctextcolor();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.DescTextColor)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_desctextcolor() const {
  return desctextcolor_.Get();
}
inline void UpBoxConfig::_internal_set_desctextcolor(const std::string& value) {
  
  desctextcolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_desctextcolor() {
  
  return desctextcolor_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_desctextcolor() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.DescTextColor)
  return desctextcolor_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_desctextcolor(std::string* desctextcolor) {
  if (desctextcolor != nullptr) {
    
  } else {
    
  }
  desctextcolor_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), desctextcolor,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (desctextcolor_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    desctextcolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.DescTextColor)
}

// float DescPosX = 8;
inline void UpBoxConfig::clear_descposx() {
  descposx_ = 0;
}
inline float UpBoxConfig::_internal_descposx() const {
  return descposx_;
}
inline float UpBoxConfig::descposx() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.DescPosX)
  return _internal_descposx();
}
inline void UpBoxConfig::_internal_set_descposx(float value) {
  
  descposx_ = value;
}
inline void UpBoxConfig::set_descposx(float value) {
  _internal_set_descposx(value);
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.DescPosX)
}

// float DescPosY = 9;
inline void UpBoxConfig::clear_descposy() {
  descposy_ = 0;
}
inline float UpBoxConfig::_internal_descposy() const {
  return descposy_;
}
inline float UpBoxConfig::descposy() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.DescPosY)
  return _internal_descposy();
}
inline void UpBoxConfig::_internal_set_descposy(float value) {
  
  descposy_ = value;
}
inline void UpBoxConfig::set_descposy(float value) {
  _internal_set_descposy(value);
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.DescPosY)
}

// string HeroDescBg = 10;
inline void UpBoxConfig::clear_herodescbg() {
  herodescbg_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::herodescbg() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.HeroDescBg)
  return _internal_herodescbg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_herodescbg(ArgT0&& arg0, ArgT... args) {
 
 herodescbg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.HeroDescBg)
}
inline std::string* UpBoxConfig::mutable_herodescbg() {
  std::string* _s = _internal_mutable_herodescbg();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.HeroDescBg)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_herodescbg() const {
  return herodescbg_.Get();
}
inline void UpBoxConfig::_internal_set_herodescbg(const std::string& value) {
  
  herodescbg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_herodescbg() {
  
  return herodescbg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_herodescbg() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.HeroDescBg)
  return herodescbg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_herodescbg(std::string* herodescbg) {
  if (herodescbg != nullptr) {
    
  } else {
    
  }
  herodescbg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herodescbg,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (herodescbg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    herodescbg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.HeroDescBg)
}

// string EnsureBg = 11;
inline void UpBoxConfig::clear_ensurebg() {
  ensurebg_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::ensurebg() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.EnsureBg)
  return _internal_ensurebg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_ensurebg(ArgT0&& arg0, ArgT... args) {
 
 ensurebg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.EnsureBg)
}
inline std::string* UpBoxConfig::mutable_ensurebg() {
  std::string* _s = _internal_mutable_ensurebg();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.EnsureBg)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_ensurebg() const {
  return ensurebg_.Get();
}
inline void UpBoxConfig::_internal_set_ensurebg(const std::string& value) {
  
  ensurebg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_ensurebg() {
  
  return ensurebg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_ensurebg() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.EnsureBg)
  return ensurebg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_ensurebg(std::string* ensurebg) {
  if (ensurebg != nullptr) {
    
  } else {
    
  }
  ensurebg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ensurebg,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (ensurebg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    ensurebg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.EnsureBg)
}

// string EnsureDescOutlineColor = 12;
inline void UpBoxConfig::clear_ensuredescoutlinecolor() {
  ensuredescoutlinecolor_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::ensuredescoutlinecolor() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.EnsureDescOutlineColor)
  return _internal_ensuredescoutlinecolor();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_ensuredescoutlinecolor(ArgT0&& arg0, ArgT... args) {
 
 ensuredescoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.EnsureDescOutlineColor)
}
inline std::string* UpBoxConfig::mutable_ensuredescoutlinecolor() {
  std::string* _s = _internal_mutable_ensuredescoutlinecolor();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.EnsureDescOutlineColor)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_ensuredescoutlinecolor() const {
  return ensuredescoutlinecolor_.Get();
}
inline void UpBoxConfig::_internal_set_ensuredescoutlinecolor(const std::string& value) {
  
  ensuredescoutlinecolor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_ensuredescoutlinecolor() {
  
  return ensuredescoutlinecolor_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_ensuredescoutlinecolor() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.EnsureDescOutlineColor)
  return ensuredescoutlinecolor_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_ensuredescoutlinecolor(std::string* ensuredescoutlinecolor) {
  if (ensuredescoutlinecolor != nullptr) {
    
  } else {
    
  }
  ensuredescoutlinecolor_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ensuredescoutlinecolor,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (ensuredescoutlinecolor_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    ensuredescoutlinecolor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.EnsureDescOutlineColor)
}

// string EnsureDescColorTop = 13;
inline void UpBoxConfig::clear_ensuredesccolortop() {
  ensuredesccolortop_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::ensuredesccolortop() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.EnsureDescColorTop)
  return _internal_ensuredesccolortop();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_ensuredesccolortop(ArgT0&& arg0, ArgT... args) {
 
 ensuredesccolortop_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.EnsureDescColorTop)
}
inline std::string* UpBoxConfig::mutable_ensuredesccolortop() {
  std::string* _s = _internal_mutable_ensuredesccolortop();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.EnsureDescColorTop)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_ensuredesccolortop() const {
  return ensuredesccolortop_.Get();
}
inline void UpBoxConfig::_internal_set_ensuredesccolortop(const std::string& value) {
  
  ensuredesccolortop_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_ensuredesccolortop() {
  
  return ensuredesccolortop_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_ensuredesccolortop() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.EnsureDescColorTop)
  return ensuredesccolortop_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_ensuredesccolortop(std::string* ensuredesccolortop) {
  if (ensuredesccolortop != nullptr) {
    
  } else {
    
  }
  ensuredesccolortop_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ensuredesccolortop,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (ensuredesccolortop_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    ensuredesccolortop_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.EnsureDescColorTop)
}

// string EnsureDescColorDown = 14;
inline void UpBoxConfig::clear_ensuredesccolordown() {
  ensuredesccolordown_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::ensuredesccolordown() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.EnsureDescColorDown)
  return _internal_ensuredesccolordown();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_ensuredesccolordown(ArgT0&& arg0, ArgT... args) {
 
 ensuredesccolordown_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.EnsureDescColorDown)
}
inline std::string* UpBoxConfig::mutable_ensuredesccolordown() {
  std::string* _s = _internal_mutable_ensuredesccolordown();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.EnsureDescColorDown)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_ensuredesccolordown() const {
  return ensuredesccolordown_.Get();
}
inline void UpBoxConfig::_internal_set_ensuredesccolordown(const std::string& value) {
  
  ensuredesccolordown_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_ensuredesccolordown() {
  
  return ensuredesccolordown_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_ensuredesccolordown() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.EnsureDescColorDown)
  return ensuredesccolordown_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_ensuredesccolordown(std::string* ensuredesccolordown) {
  if (ensuredesccolordown != nullptr) {
    
  } else {
    
  }
  ensuredesccolordown_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ensuredesccolordown,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (ensuredesccolordown_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    ensuredesccolordown_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.EnsureDescColorDown)
}

// string SingleDrawBtnImg = 15;
inline void UpBoxConfig::clear_singledrawbtnimg() {
  singledrawbtnimg_.ClearToEmpty();
}
inline const std::string& UpBoxConfig::singledrawbtnimg() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.SingleDrawBtnImg)
  return _internal_singledrawbtnimg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UpBoxConfig::set_singledrawbtnimg(ArgT0&& arg0, ArgT... args) {
 
 singledrawbtnimg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.SingleDrawBtnImg)
}
inline std::string* UpBoxConfig::mutable_singledrawbtnimg() {
  std::string* _s = _internal_mutable_singledrawbtnimg();
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfig.SingleDrawBtnImg)
  return _s;
}
inline const std::string& UpBoxConfig::_internal_singledrawbtnimg() const {
  return singledrawbtnimg_.Get();
}
inline void UpBoxConfig::_internal_set_singledrawbtnimg(const std::string& value) {
  
  singledrawbtnimg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::_internal_mutable_singledrawbtnimg() {
  
  return singledrawbtnimg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* UpBoxConfig::release_singledrawbtnimg() {
  // @@protoc_insertion_point(field_release:resource.UpBoxConfig.SingleDrawBtnImg)
  return singledrawbtnimg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void UpBoxConfig::set_allocated_singledrawbtnimg(std::string* singledrawbtnimg) {
  if (singledrawbtnimg != nullptr) {
    
  } else {
    
  }
  singledrawbtnimg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), singledrawbtnimg,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (singledrawbtnimg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    singledrawbtnimg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:resource.UpBoxConfig.SingleDrawBtnImg)
}

// int32 EnsureID = 16;
inline void UpBoxConfig::clear_ensureid() {
  ensureid_ = 0;
}
inline int32_t UpBoxConfig::_internal_ensureid() const {
  return ensureid_;
}
inline int32_t UpBoxConfig::ensureid() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.EnsureID)
  return _internal_ensureid();
}
inline void UpBoxConfig::_internal_set_ensureid(int32_t value) {
  
  ensureid_ = value;
}
inline void UpBoxConfig::set_ensureid(int32_t value) {
  _internal_set_ensureid(value);
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.EnsureID)
}

// int32 CostBootyID = 17;
inline void UpBoxConfig::clear_costbootyid() {
  costbootyid_ = 0;
}
inline int32_t UpBoxConfig::_internal_costbootyid() const {
  return costbootyid_;
}
inline int32_t UpBoxConfig::costbootyid() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.CostBootyID)
  return _internal_costbootyid();
}
inline void UpBoxConfig::_internal_set_costbootyid(int32_t value) {
  
  costbootyid_ = value;
}
inline void UpBoxConfig::set_costbootyid(int32_t value) {
  _internal_set_costbootyid(value);
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.CostBootyID)
}

// int32 MinEnsureID = 18;
inline void UpBoxConfig::clear_minensureid() {
  minensureid_ = 0;
}
inline int32_t UpBoxConfig::_internal_minensureid() const {
  return minensureid_;
}
inline int32_t UpBoxConfig::minensureid() const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfig.MinEnsureID)
  return _internal_minensureid();
}
inline void UpBoxConfig::_internal_set_minensureid(int32_t value) {
  
  minensureid_ = value;
}
inline void UpBoxConfig::set_minensureid(int32_t value) {
  _internal_set_minensureid(value);
  // @@protoc_insertion_point(field_set:resource.UpBoxConfig.MinEnsureID)
}

// -------------------------------------------------------------------

// UpBoxConfigList

// repeated .resource.UpBoxConfig data = 1;
inline int UpBoxConfigList::_internal_data_size() const {
  return data_.size();
}
inline int UpBoxConfigList::data_size() const {
  return _internal_data_size();
}
inline void UpBoxConfigList::clear_data() {
  data_.Clear();
}
inline ::resource::UpBoxConfig* UpBoxConfigList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:resource.UpBoxConfigList.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::UpBoxConfig >*
UpBoxConfigList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:resource.UpBoxConfigList.data)
  return &data_;
}
inline const ::resource::UpBoxConfig& UpBoxConfigList::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::resource::UpBoxConfig& UpBoxConfigList::data(int index) const {
  // @@protoc_insertion_point(field_get:resource.UpBoxConfigList.data)
  return _internal_data(index);
}
inline ::resource::UpBoxConfig* UpBoxConfigList::_internal_add_data() {
  return data_.Add();
}
inline ::resource::UpBoxConfig* UpBoxConfigList::add_data() {
  ::resource::UpBoxConfig* _add = _internal_add_data();
  // @@protoc_insertion_point(field_add:resource.UpBoxConfigList.data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::resource::UpBoxConfig >&
UpBoxConfigList::data() const {
  // @@protoc_insertion_point(field_list:resource.UpBoxConfigList.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace resource

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_BoxConfig_2eproto
